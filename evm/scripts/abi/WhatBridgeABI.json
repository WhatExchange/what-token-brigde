{
  "abi": [
    {
      "type": "constructor",
      "inputs": [
        { "name": "wormhole_", "type": "address", "internalType": "address" },
        { "name": "chainId_", "type": "uint16", "internalType": "uint16" },
        {
          "name": "wormholeFinality_",
          "type": "uint8",
          "internalType": "uint8"
        },
        { "name": "feePrecision_", "type": "uint32", "internalType": "uint32" },
        {
          "name": "relayerFeePercentage_",
          "type": "uint32",
          "internalType": "uint32"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "calculateRelayerFee",
      "inputs": [
        { "name": "amount", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "chainId",
      "inputs": [],
      "outputs": [{ "name": "", "type": "uint16", "internalType": "uint16" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "decodeMessage",
      "inputs": [
        { "name": "encodedMessage", "type": "bytes", "internalType": "bytes" }
      ],
      "outputs": [
        {
          "name": "parsedMessage",
          "type": "tuple",
          "internalType": "struct WhatTokenBridgeStructs.TransferMessage",
          "components": [
            { "name": "payloadID", "type": "uint8", "internalType": "uint8" },
            {
              "name": "recipient",
              "type": "bytes32",
              "internalType": "bytes32"
            },
            { "name": "amount", "type": "uint256", "internalType": "uint256" }
          ]
        }
      ],
      "stateMutability": "pure"
    },
    {
      "type": "function",
      "name": "encodeMessage",
      "inputs": [
        {
          "name": "parsedMessage",
          "type": "tuple",
          "internalType": "struct WhatTokenBridgeStructs.TransferMessage",
          "components": [
            { "name": "payloadID", "type": "uint8", "internalType": "uint8" },
            {
              "name": "recipient",
              "type": "bytes32",
              "internalType": "bytes32"
            },
            { "name": "amount", "type": "uint256", "internalType": "uint256" }
          ]
        }
      ],
      "outputs": [
        { "name": "encodedMessage", "type": "bytes", "internalType": "bytes" }
      ],
      "stateMutability": "pure"
    },
    {
      "type": "function",
      "name": "feePrecision",
      "inputs": [],
      "outputs": [{ "name": "", "type": "uint32", "internalType": "uint32" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getReceivedMessage",
      "inputs": [
        { "name": "hash", "type": "bytes32", "internalType": "bytes32" }
      ],
      "outputs": [
        { "name": "recipient", "type": "address", "internalType": "address" },
        { "name": "amount", "type": "uint256", "internalType": "uint256" }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getRegisteredEmitter",
      "inputs": [
        { "name": "emitterChainId", "type": "uint16", "internalType": "uint16" }
      ],
      "outputs": [{ "name": "", "type": "bytes32", "internalType": "bytes32" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "isMessageConsumed",
      "inputs": [
        { "name": "hash", "type": "bytes32", "internalType": "bytes32" }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "isPaused",
      "inputs": [],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "isWhitelistEnabled",
      "inputs": [],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "isWhitelisted",
      "inputs": [
        { "name": "account", "type": "address", "internalType": "address" }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "lockAndSend",
      "inputs": [
        { "name": "recipient", "type": "bytes32", "internalType": "bytes32" },
        { "name": "amount", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [
        {
          "name": "messageSequence",
          "type": "uint64",
          "internalType": "uint64"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "owner",
      "inputs": [],
      "outputs": [{ "name": "", "type": "address", "internalType": "address" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "redeemAndUnlock",
      "inputs": [
        { "name": "encodedMessage", "type": "bytes", "internalType": "bytes" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "registerEmitter",
      "inputs": [
        {
          "name": "emitterChainId",
          "type": "uint16",
          "internalType": "uint16"
        },
        {
          "name": "emitterAddress",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "relayerFeePercentage",
      "inputs": [],
      "outputs": [{ "name": "", "type": "uint32", "internalType": "uint32" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "setWhatTokenAddress",
      "inputs": [
        { "name": "whatToken", "type": "address", "internalType": "address" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "whatToken",
      "inputs": [],
      "outputs": [{ "name": "", "type": "address", "internalType": "address" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "wormhole",
      "inputs": [],
      "outputs": [
        { "name": "", "type": "address", "internalType": "contract IWormhole" }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "wormholeFinality",
      "inputs": [],
      "outputs": [{ "name": "", "type": "uint8", "internalType": "uint8" }],
      "stateMutability": "view"
    },
    {
      "type": "event",
      "name": "TokensLocked",
      "inputs": [
        {
          "name": "sender",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "recipient",
          "type": "bytes32",
          "indexed": true,
          "internalType": "bytes32"
        },
        {
          "name": "amount",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "normalizedAmount",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "sequence",
          "type": "uint64",
          "indexed": false,
          "internalType": "uint64"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "TokensUnlocked",
      "inputs": [
        {
          "name": "messageHash",
          "type": "bytes32",
          "indexed": true,
          "internalType": "bytes32"
        },
        {
          "name": "recipient",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "relayer",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "amount",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "relayerFee",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "error",
      "name": "FailedVaaParseAndVerification",
      "inputs": [
        { "name": "reason", "type": "string", "internalType": "string" }
      ]
    },
    { "type": "error", "name": "InsufficientContractBalance", "inputs": [] },
    { "type": "error", "name": "InvalidAmount", "inputs": [] },
    { "type": "error", "name": "InvalidEVMAddress", "inputs": [] },
    { "type": "error", "name": "InvalidMessageLength", "inputs": [] },
    { "type": "error", "name": "InvalidWormholeFeeAmount", "inputs": [] },
    { "type": "error", "name": "RecipientZeroAddress", "inputs": [] },
    { "type": "error", "name": "TransferFailed", "inputs": [] },
    { "type": "error", "name": "VaaAlreadyClaimed", "inputs": [] },
    { "type": "error", "name": "WhatTokenZeroAddress", "inputs": [] },
    { "type": "error", "name": "WormholeZeroAddress", "inputs": [] },
    { "type": "error", "name": "WrongChainId", "inputs": [] },
    { "type": "error", "name": "WrongEmitterAddress", "inputs": [] },
    { "type": "error", "name": "WrongEmitterChainId", "inputs": [] },
    { "type": "error", "name": "WrongWormholeFinality", "inputs": [] }
  ],
  "bytecode": {
    "object": "0x60806040523480156200001157600080fd5b50604051620017e1380380620017e183398101604081905262000034916200016b565b60016007556001600160a01b0385166200006157604051630a99537b60e01b815260040160405180910390fd5b8361ffff1660000362000086576040516217e1ef60ea1b815260040160405180910390fd5b8260ff16600003620000ab576040516391f32d0b60e01b815260040160405180910390fd5b600080546001600160a01b03191633179055600180546001600160a01b0319166001600160a01b0387161790556001805461ffff60a01b1916600160a01b61ffff8716021790556001805460ff60b01b1916600160b01b60ff8616021790556002805463ffffffff60a01b1916600160a01b63ffffffff8516021790556002805463ffffffff60c01b1916600160c01b63ffffffff8416021790555050505050620001f9565b805163ffffffff811681146200016657600080fd5b919050565b600080600080600060a086880312156200018457600080fd5b85516001600160a01b03811681146200019c57600080fd5b602087015190955061ffff81168114620001b557600080fd5b604087015190945060ff81168114620001cd57600080fd5b9250620001dd6060870162000151565b9150620001ed6080870162000151565b90509295509295909350565b6115d880620002096000396000f3fe608060405234801561001057600080fd5b506004361061012c5760003560e01c806363c09358116100ad5780639a8a0592116100715780639a8a0592146103bf578063b187bd26146103e0578063bca4b0fa146103f2578063bfb3c01014610405578063dc404a0e1461041857600080fd5b806363c093581461034e57806384acd1bb1461037357806385e66df4146103845780638da5cb5b146103995780638fe33b9f146103aa57600080fd5b806335ff1e28116100f457806335ff1e28146102725780633af32abf14610298578063470feb87146102c45780635df52e23146102e7578063634d45b21461031657600080fd5b80630520557b14610131578063184d69ab146101555780631b6e4ab6146101735780631e9b61af146101d857806324816abb14610240575b600080fd5b600154600160b01b900460ff1660405160ff90911681526020015b60405180910390f35b600154600160c01b900460ff165b604051901515815260200161014c565b6101b9610181366004610e42565b600090815260056020908152604091829020825180840190935280546001600160a01b03168084526001909101549290910182905291565b604080516001600160a01b03909316835260208301919091520161014c565b6102336101e6366004610efe565b8051602080830151604080850151905160f89490941b6001600160f81b03191692840192909252602183015260418201526060906061016040516020818303038152906040529050919050565b60405161014c9190610fb0565b61026461024e366004610fd3565b61ffff1660009081526004602052604090205490565b60405190815260200161014c565b600254600160a01b900463ffffffff165b60405163ffffffff909116815260200161014c565b6101636102a6366004610ff0565b6001600160a01b031660009081526003602052604090205460ff1690565b6101636102d2366004610e42565b60009081526006602052604090205460ff1690565b6102fd6102f5366004611019565b600192915050565b60405167ffffffffffffffff909116815260200161014c565b610329610324366004611063565b61042b565b60408051825160ff16815260208084015190820152918101519082015260600161014c565b6002546001600160a01b03165b6040516001600160a01b03909116815260200161014c565b6001546001600160a01b031661035b565b600254600160c01b900463ffffffff16610283565b6000546001600160a01b031661035b565b6103bd6103b8366004611063565b610537565b005b600154600160a01b900461ffff1660405161ffff909116815260200161014c565b600154600160b81b900460ff16610163565b6103bd6104003660046110e3565b61078a565b6103bd610413366004610ff0565b61087a565b610264610426366004610e42565b6108fb565b60408051606081018252600080825260208201819052918101829052906104528382610938565b60ff168083526001146104a05760405162461bcd60e51b81526020600482015260116024820152701a5b9d985b1a59081c185e5b1bd8591251607a1b60448201526064015b60405180910390fd5b6104ab600182611125565b90506104b78382610998565b6020808401919091526104ca9082611125565b90506104d683826109fb565b60408301526104e6602082611125565b9050825181146105315760405162461bcd60e51b81526020600482015260166024820152750d2dcecc2d8d2c840dacae6e6c2ceca40d8cadccee8d60531b6044820152606401610497565b50919050565b600080600061054e6001546001600160a01b031690565b6001600160a01b031663c0fd8bde856040518263ffffffff1660e01b81526004016105799190610fb0565b600060405180830381865afa158015610596573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526105be919081019061129e565b9250925092508181906105e45760405162461bcd60e51b81526004016104979190610fb0565b506105ee83610a54565b61060b57604051636b99980160e11b815260040160405180910390fd5b600061061a8460e0015161042b565b905061063a84610140015160009081526006602052604090205460ff1690565b156106585760405163032a925360e41b815260040160405180910390fd5b60006106678260200151610a80565b604083015190915060006106836002546001600160a01b031690565b9050600061069082610aaf565b9050600061069e8483610b51565b905060006106ab826108fb565b9050806000036106c5576106c0848784610b89565b6106e4565b6106d0843383610b89565b6106e484876106df84866113f6565b610b89565b6101408a0151604080518481526020810184905233926001600160a01b038a169290917f1705447c4ca6f25bc2e5da6270d2bcffd3fef27675b023c5a76e075e99863699910160405180910390a46101408a0151600090815260056020908152604080832080546001600160a01b0319166001600160a01b038b1617815560019081018690556006909252909120805460ff191690911790555050505050505050505050565b3361079d6000546001600160a01b031690565b6001600160a01b0316146107ea5760405162461bcd60e51b815260206004820152601460248201527331b0b63632b9103737ba103a34329037bbb732b960611b6044820152606401610497565b8161ffff1660000361080f5760405163eae0fb0960e01b815260040160405180910390fd5b600154600160a01b900461ffff1661ffff168261ffff16036108445760405163eae0fb0960e01b815260040160405180910390fd5b8061086257604051630a99537b60e01b815260040160405180910390fd5b61ffff91909116600090815260046020526040902055565b3361088d6000546001600160a01b031690565b6001600160a01b0316146108da5760405162461bcd60e51b815260206004820152601460248201527331b0b63632b9103737ba103a34329037bbb732b960611b6044820152606401610497565b600280546001600160a01b0319166001600160a01b03831617905550565b50565b60025460009063ffffffff600160a01b8204811691600160c01b9004166109289063ffffffff1684611409565b6109329190611420565b92915050565b6000818351116109805760405162461bcd60e51b8152602060048201526013602482015272746f55696e74385f6f75744f66426f756e647360681b6044820152606401610497565b600061098d600184611125565b909301519392505050565b6000806109a6602084611125565b905080845110156109f15760405162461bcd60e51b8152602060048201526015602482015274746f427974657333325f6f75744f66426f756e647360581b6044820152606401610497565b9092015192915050565b600080610a09602084611125565b905080845110156109f15760405162461bcd60e51b8152602060048201526015602482015274746f55696e743235365f6f75744f66426f756e647360581b6044820152606401610497565b60008160800151610a79836060015161ffff1660009081526004602052604090205490565b1492915050565b60006001600160a01b0319821615610aab5760405163e3a39ea160e01b815260040160405180910390fd5b5090565b60408051600481526024810182526020810180516001600160e01b031663313ce56760e01b179052905160009182916001600160a01b03851691610af291611442565b600060405180830381855afa9150503d8060008114610b2d576040519150601f19603f3d011682016040523d82523d6000602084013e610b32565b606091505b5091505080806020019051810190610b4a919061145e565b9392505050565b600060088260ff161115610b8257610b6a60088361147b565b610b7590600a611578565b610b7f9084611409565b92505b5090919050565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b179052610bdb908490610be0565b505050565b6000610c35826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316610cb29092919063ffffffff16565b805190915015610bdb5780806020019051810190610c539190611587565b610bdb5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610497565b6060610cc18484600085610cc9565b949350505050565b606082471015610d2a5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610497565b600080866001600160a01b03168587604051610d469190611442565b60006040518083038185875af1925050503d8060008114610d83576040519150601f19603f3d011682016040523d82523d6000602084013e610d88565b606091505b5091509150610d9987838387610da4565b979650505050505050565b60608315610e13578251600003610e0c576001600160a01b0385163b610e0c5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610497565b5081610cc1565b610cc18383815115610e285781518083602001fd5b8060405162461bcd60e51b81526004016104979190610fb0565b600060208284031215610e5457600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b6040516080810167ffffffffffffffff81118282101715610e9457610e94610e5b565b60405290565b604051610160810167ffffffffffffffff81118282101715610e9457610e94610e5b565b604051601f8201601f1916810167ffffffffffffffff81118282101715610ee757610ee7610e5b565b604052919050565b60ff811681146108f857600080fd5b600060608284031215610f1057600080fd5b6040516060810181811067ffffffffffffffff82111715610f3357610f33610e5b565b6040528235610f4181610eef565b8152602083810135908201526040928301359281019290925250919050565b60005b83811015610f7b578181015183820152602001610f63565b50506000910152565b60008151808452610f9c816020860160208601610f60565b601f01601f19169290920160200192915050565b602081526000610b4a6020830184610f84565b61ffff811681146108f857600080fd5b600060208284031215610fe557600080fd5b8135610b4a81610fc3565b60006020828403121561100257600080fd5b81356001600160a01b0381168114610b4a57600080fd5b6000806040838503121561102c57600080fd5b50508035926020909101359150565b600067ffffffffffffffff82111561105557611055610e5b565b50601f01601f191660200190565b60006020828403121561107557600080fd5b813567ffffffffffffffff81111561108c57600080fd5b8201601f8101841361109d57600080fd5b80356110b06110ab8261103b565b610ebe565b8181528560208385010111156110c557600080fd5b81602084016020830137600091810160200191909152949350505050565b600080604083850312156110f657600080fd5b823561110181610fc3565b946020939093013593505050565b634e487b7160e01b600052601160045260246000fd5b808201808211156109325761093261110f565b805161114381610eef565b919050565b805163ffffffff8116811461114357600080fd5b805161114381610fc3565b805167ffffffffffffffff8116811461114357600080fd5b600082601f83011261119057600080fd5b815161119e6110ab8261103b565b8181528460208386010111156111b357600080fd5b610cc1826020830160208701610f60565b600082601f8301126111d557600080fd5b8151602067ffffffffffffffff8211156111f1576111f1610e5b565b6111ff818360051b01610ebe565b82815260079290921b8401810191818101908684111561121e57600080fd5b8286015b84811015611283576080818903121561123b5760008081fd5b611243610e71565b81518152848201518582015260408083015161125e81610eef565b9082015260608281015161127181610eef565b90820152835291830191608001611222565b509695505050505050565b8051801515811461114357600080fd5b6000806000606084860312156112b357600080fd5b835167ffffffffffffffff808211156112cb57600080fd5b9085019061016082880312156112e057600080fd5b6112e8610e9a565b6112f183611138565b81526112ff60208401611148565b602082015261131060408401611148565b60408201526113216060840161115c565b60608201526080830151608082015261133c60a08401611167565b60a082015261134d60c08401611138565b60c082015260e08301518281111561136457600080fd5b6113708982860161117f565b60e083015250610100611384818501611148565b90820152610120838101518381111561139c57600080fd5b6113a88a8287016111c4565b9183019190915250610140838101519082015294506113c96020870161128e565b935060408601519150808211156113df57600080fd5b506113ec8682870161117f565b9150509250925092565b818103818111156109325761093261110f565b80820281158282048414176109325761093261110f565b60008261143d57634e487b7160e01b600052601260045260246000fd5b500490565b60008251611454818460208701610f60565b9190910192915050565b60006020828403121561147057600080fd5b8151610b4a81610eef565b60ff82811682821603908111156109325761093261110f565b600181815b808511156114cf5781600019048211156114b5576114b561110f565b808516156114c257918102915b93841c9390800290611499565b509250929050565b6000826114e657506001610932565b816114f357506000610932565b816001811461150957600281146115135761152f565b6001915050610932565b60ff8411156115245761152461110f565b50506001821b610932565b5060208310610133831016604e8410600b8410161715611552575081810a610932565b61155c8383611494565b80600019048211156115705761157061110f565b029392505050565b6000610b4a60ff8416836114d7565b60006020828403121561159957600080fd5b610b4a8261128e56fea264697066735822122037108f6998cd689fa8980fc2f528cea0ba2464ac6e3ab88adef41fd0a5df497064736f6c63430008130033",
    "sourceMap": "580:10841:33:-:0;;;1565:674;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1716:1:17;1821:7;:22;-1:-1:-1;;;;;1750:23:33;;1746:82;;1796:21;;-1:-1:-1;;;1796:21:33;;;;;;;;;;;1746:82;1842:8;:13;;1854:1;1842:13;1838:65;;1878:14;;-1:-1:-1;;;1878:14:33;;;;;;;;;;;1838:65;1917:17;:22;;1938:1;1917:22;1913:83;;1962:23;;-1:-1:-1;;;1962:23:33;;;;;;;;;;;1913:83;216:6:37;:21;;-1:-1:-1;;;;;;216:21:37;2015:10:33;216:21:37;;;309:15;:36;;-1:-1:-1;;;;;;309:36:37;-1:-1:-1;;;;;309:36:37;;;;;517:14;:25;;-1:-1:-1;;;;517:25:37;-1:-1:-1;;;517:25:37;;;;;;;619:23;:34;;-1:-1:-1;;;;619:34:37;-1:-1:-1;;;619:34:37;;;;;;;861:19;:35;;-1:-1:-1;;;;861:35:37;-1:-1:-1;;;861:35:37;;;;;;;991:27;:51;;-1:-1:-1;;;;991:51:37;-1:-1:-1;;;991:51:37;;;;;;;1565:674:33;;;;;580:10841;;14:167:40;92:13;;145:10;134:22;;124:33;;114:61;;171:1;168;161:12;114:61;14:167;;;:::o;186:777::-;287:6;295;303;311;319;372:3;360:9;351:7;347:23;343:33;340:53;;;389:1;386;379:12;340:53;415:16;;-1:-1:-1;;;;;460:31:40;;450:42;;440:70;;506:1;503;496:12;440:70;579:2;564:18;;558:25;529:5;;-1:-1:-1;627:6:40;614:20;;602:33;;592:61;;649:1;646;639:12;592:61;724:2;709:18;;703:25;672:7;;-1:-1:-1;772:4:40;759:18;;747:31;;737:59;;792:1;789;782:12;737:59;815:7;-1:-1:-1;841:48:40;885:2;870:18;;841:48;:::i;:::-;831:58;;908:49;952:3;941:9;937:19;908:49;:::i;:::-;898:59;;186:777;;;;;;;;:::o;:::-;580:10841:33;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b506004361061012c5760003560e01c806363c09358116100ad5780639a8a0592116100715780639a8a0592146103bf578063b187bd26146103e0578063bca4b0fa146103f2578063bfb3c01014610405578063dc404a0e1461041857600080fd5b806363c093581461034e57806384acd1bb1461037357806385e66df4146103845780638da5cb5b146103995780638fe33b9f146103aa57600080fd5b806335ff1e28116100f457806335ff1e28146102725780633af32abf14610298578063470feb87146102c45780635df52e23146102e7578063634d45b21461031657600080fd5b80630520557b14610131578063184d69ab146101555780631b6e4ab6146101735780631e9b61af146101d857806324816abb14610240575b600080fd5b600154600160b01b900460ff1660405160ff90911681526020015b60405180910390f35b600154600160c01b900460ff165b604051901515815260200161014c565b6101b9610181366004610e42565b600090815260056020908152604091829020825180840190935280546001600160a01b03168084526001909101549290910182905291565b604080516001600160a01b03909316835260208301919091520161014c565b6102336101e6366004610efe565b8051602080830151604080850151905160f89490941b6001600160f81b03191692840192909252602183015260418201526060906061016040516020818303038152906040529050919050565b60405161014c9190610fb0565b61026461024e366004610fd3565b61ffff1660009081526004602052604090205490565b60405190815260200161014c565b600254600160a01b900463ffffffff165b60405163ffffffff909116815260200161014c565b6101636102a6366004610ff0565b6001600160a01b031660009081526003602052604090205460ff1690565b6101636102d2366004610e42565b60009081526006602052604090205460ff1690565b6102fd6102f5366004611019565b600192915050565b60405167ffffffffffffffff909116815260200161014c565b610329610324366004611063565b61042b565b60408051825160ff16815260208084015190820152918101519082015260600161014c565b6002546001600160a01b03165b6040516001600160a01b03909116815260200161014c565b6001546001600160a01b031661035b565b600254600160c01b900463ffffffff16610283565b6000546001600160a01b031661035b565b6103bd6103b8366004611063565b610537565b005b600154600160a01b900461ffff1660405161ffff909116815260200161014c565b600154600160b81b900460ff16610163565b6103bd6104003660046110e3565b61078a565b6103bd610413366004610ff0565b61087a565b610264610426366004610e42565b6108fb565b60408051606081018252600080825260208201819052918101829052906104528382610938565b60ff168083526001146104a05760405162461bcd60e51b81526020600482015260116024820152701a5b9d985b1a59081c185e5b1bd8591251607a1b60448201526064015b60405180910390fd5b6104ab600182611125565b90506104b78382610998565b6020808401919091526104ca9082611125565b90506104d683826109fb565b60408301526104e6602082611125565b9050825181146105315760405162461bcd60e51b81526020600482015260166024820152750d2dcecc2d8d2c840dacae6e6c2ceca40d8cadccee8d60531b6044820152606401610497565b50919050565b600080600061054e6001546001600160a01b031690565b6001600160a01b031663c0fd8bde856040518263ffffffff1660e01b81526004016105799190610fb0565b600060405180830381865afa158015610596573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526105be919081019061129e565b9250925092508181906105e45760405162461bcd60e51b81526004016104979190610fb0565b506105ee83610a54565b61060b57604051636b99980160e11b815260040160405180910390fd5b600061061a8460e0015161042b565b905061063a84610140015160009081526006602052604090205460ff1690565b156106585760405163032a925360e41b815260040160405180910390fd5b60006106678260200151610a80565b604083015190915060006106836002546001600160a01b031690565b9050600061069082610aaf565b9050600061069e8483610b51565b905060006106ab826108fb565b9050806000036106c5576106c0848784610b89565b6106e4565b6106d0843383610b89565b6106e484876106df84866113f6565b610b89565b6101408a0151604080518481526020810184905233926001600160a01b038a169290917f1705447c4ca6f25bc2e5da6270d2bcffd3fef27675b023c5a76e075e99863699910160405180910390a46101408a0151600090815260056020908152604080832080546001600160a01b0319166001600160a01b038b1617815560019081018690556006909252909120805460ff191690911790555050505050505050505050565b3361079d6000546001600160a01b031690565b6001600160a01b0316146107ea5760405162461bcd60e51b815260206004820152601460248201527331b0b63632b9103737ba103a34329037bbb732b960611b6044820152606401610497565b8161ffff1660000361080f5760405163eae0fb0960e01b815260040160405180910390fd5b600154600160a01b900461ffff1661ffff168261ffff16036108445760405163eae0fb0960e01b815260040160405180910390fd5b8061086257604051630a99537b60e01b815260040160405180910390fd5b61ffff91909116600090815260046020526040902055565b3361088d6000546001600160a01b031690565b6001600160a01b0316146108da5760405162461bcd60e51b815260206004820152601460248201527331b0b63632b9103737ba103a34329037bbb732b960611b6044820152606401610497565b600280546001600160a01b0319166001600160a01b03831617905550565b50565b60025460009063ffffffff600160a01b8204811691600160c01b9004166109289063ffffffff1684611409565b6109329190611420565b92915050565b6000818351116109805760405162461bcd60e51b8152602060048201526013602482015272746f55696e74385f6f75744f66426f756e647360681b6044820152606401610497565b600061098d600184611125565b909301519392505050565b6000806109a6602084611125565b905080845110156109f15760405162461bcd60e51b8152602060048201526015602482015274746f427974657333325f6f75744f66426f756e647360581b6044820152606401610497565b9092015192915050565b600080610a09602084611125565b905080845110156109f15760405162461bcd60e51b8152602060048201526015602482015274746f55696e743235365f6f75744f66426f756e647360581b6044820152606401610497565b60008160800151610a79836060015161ffff1660009081526004602052604090205490565b1492915050565b60006001600160a01b0319821615610aab5760405163e3a39ea160e01b815260040160405180910390fd5b5090565b60408051600481526024810182526020810180516001600160e01b031663313ce56760e01b179052905160009182916001600160a01b03851691610af291611442565b600060405180830381855afa9150503d8060008114610b2d576040519150601f19603f3d011682016040523d82523d6000602084013e610b32565b606091505b5091505080806020019051810190610b4a919061145e565b9392505050565b600060088260ff161115610b8257610b6a60088361147b565b610b7590600a611578565b610b7f9084611409565b92505b5090919050565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b179052610bdb908490610be0565b505050565b6000610c35826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316610cb29092919063ffffffff16565b805190915015610bdb5780806020019051810190610c539190611587565b610bdb5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610497565b6060610cc18484600085610cc9565b949350505050565b606082471015610d2a5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610497565b600080866001600160a01b03168587604051610d469190611442565b60006040518083038185875af1925050503d8060008114610d83576040519150601f19603f3d011682016040523d82523d6000602084013e610d88565b606091505b5091509150610d9987838387610da4565b979650505050505050565b60608315610e13578251600003610e0c576001600160a01b0385163b610e0c5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610497565b5081610cc1565b610cc18383815115610e285781518083602001fd5b8060405162461bcd60e51b81526004016104979190610fb0565b600060208284031215610e5457600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b6040516080810167ffffffffffffffff81118282101715610e9457610e94610e5b565b60405290565b604051610160810167ffffffffffffffff81118282101715610e9457610e94610e5b565b604051601f8201601f1916810167ffffffffffffffff81118282101715610ee757610ee7610e5b565b604052919050565b60ff811681146108f857600080fd5b600060608284031215610f1057600080fd5b6040516060810181811067ffffffffffffffff82111715610f3357610f33610e5b565b6040528235610f4181610eef565b8152602083810135908201526040928301359281019290925250919050565b60005b83811015610f7b578181015183820152602001610f63565b50506000910152565b60008151808452610f9c816020860160208601610f60565b601f01601f19169290920160200192915050565b602081526000610b4a6020830184610f84565b61ffff811681146108f857600080fd5b600060208284031215610fe557600080fd5b8135610b4a81610fc3565b60006020828403121561100257600080fd5b81356001600160a01b0381168114610b4a57600080fd5b6000806040838503121561102c57600080fd5b50508035926020909101359150565b600067ffffffffffffffff82111561105557611055610e5b565b50601f01601f191660200190565b60006020828403121561107557600080fd5b813567ffffffffffffffff81111561108c57600080fd5b8201601f8101841361109d57600080fd5b80356110b06110ab8261103b565b610ebe565b8181528560208385010111156110c557600080fd5b81602084016020830137600091810160200191909152949350505050565b600080604083850312156110f657600080fd5b823561110181610fc3565b946020939093013593505050565b634e487b7160e01b600052601160045260246000fd5b808201808211156109325761093261110f565b805161114381610eef565b919050565b805163ffffffff8116811461114357600080fd5b805161114381610fc3565b805167ffffffffffffffff8116811461114357600080fd5b600082601f83011261119057600080fd5b815161119e6110ab8261103b565b8181528460208386010111156111b357600080fd5b610cc1826020830160208701610f60565b600082601f8301126111d557600080fd5b8151602067ffffffffffffffff8211156111f1576111f1610e5b565b6111ff818360051b01610ebe565b82815260079290921b8401810191818101908684111561121e57600080fd5b8286015b84811015611283576080818903121561123b5760008081fd5b611243610e71565b81518152848201518582015260408083015161125e81610eef565b9082015260608281015161127181610eef565b90820152835291830191608001611222565b509695505050505050565b8051801515811461114357600080fd5b6000806000606084860312156112b357600080fd5b835167ffffffffffffffff808211156112cb57600080fd5b9085019061016082880312156112e057600080fd5b6112e8610e9a565b6112f183611138565b81526112ff60208401611148565b602082015261131060408401611148565b60408201526113216060840161115c565b60608201526080830151608082015261133c60a08401611167565b60a082015261134d60c08401611138565b60c082015260e08301518281111561136457600080fd5b6113708982860161117f565b60e083015250610100611384818501611148565b90820152610120838101518381111561139c57600080fd5b6113a88a8287016111c4565b9183019190915250610140838101519082015294506113c96020870161128e565b935060408601519150808211156113df57600080fd5b506113ec8682870161117f565b9150509250925092565b818103818111156109325761093261110f565b80820281158282048414176109325761093261110f565b60008261143d57634e487b7160e01b600052601260045260246000fd5b500490565b60008251611454818460208701610f60565b9190910192915050565b60006020828403121561147057600080fd5b8151610b4a81610eef565b60ff82811682821603908111156109325761093261110f565b600181815b808511156114cf5781600019048211156114b5576114b561110f565b808516156114c257918102915b93841c9390800290611499565b509250929050565b6000826114e657506001610932565b816114f357506000610932565b816001811461150957600281146115135761152f565b6001915050610932565b60ff8411156115245761152461110f565b50506001821b610932565b5060208310610133831016604e8410600b8410161715611552575081810a610932565b61155c8383611494565b80600019048211156115705761157061110f565b029392505050565b6000610b4a60ff8416836114d7565b60006020828403121561159957600080fd5b610b4a8261128e56fea264697066735822122037108f6998cd689fa8980fc2f528cea0ba2464ac6e3ab88adef41fd0a5df497064736f6c63430008130033",
    "sourceMap": "580:10841:33:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;671:103:35;744:23;;-1:-1:-1;;;744:23:35;;;;671:103;;186:4:40;174:17;;;156:36;;144:2;129:18;671:103:35;;;;;;;;1620;1694:22;;-1:-1:-1;;;1694:22:35;;;;1620:103;;;368:14:40;;361:22;343:41;;331:2;316:18;1620:103:35;203:187:40;934:241:35;;;;;;:::i;:::-;997:17;1087:29;;;:23;:29;;;;;;;;;1042:74;;;;;;;;;;-1:-1:-1;;;;;1042:74:35;;;;;;;;;;;;;;;;;934:241;;;;;-1:-1:-1;;;;;772:32:40;;;754:51;;836:2;821:18;;814:34;;;;727:18;934:241:35;580:274:40;237:293:36;;;;;;:::i;:::-;419:23;;456;;;;;493:20;;;;;389:134;;7602:3:40;7580:16;;;;-1:-1:-1;;;;;;7576:36:40;389:134:36;;;7564:49:40;;;;7629:11;;;7622:27;7665:12;;;7658:28;333:27:36;;7702:12:40;;389:134:36;;;;;;;;;;;;372:151;;237:293;;;;;;;;;;;:::i;780:148:35:-;;;;;;:::i;:::-;880:41;;854:7;880:41;;;:25;:41;;;;;;;780:148;;;;3827:25:40;;;3815:2;3800:18;780:148:35;3681:177:40;1308:96:35;1378:19;;-1:-1:-1;;;1378:19:35;;;;1308:96;;;4037:10:40;4025:23;;;4007:42;;3995:2;3980:18;1308:96:35;3863:192:40;1729:116:35;;;;;;:::i;:::-;-1:-1:-1;;;;;1813:25:35;1790:4;1813:25;;;:16;:25;;;;;;;;;1729:116;1181:121;;;;;;:::i;:::-;1243:4;1266:29;;;:23;:29;;;;;;;;;1181:121;2567:1737:33;;;;;;:::i;:::-;4296:1;;2567:1737;-1:-1:-1;;2567:1737:33;;;;4778:18:40;4766:31;;;4748:50;;4736:2;4721:18;2567:1737:33;4604:200:40;536:571:36;;;;;;:::i;:::-;;:::i;:::-;;;;5912:13:40;;5927:4;5908:24;5890:43;;5989:4;5977:17;;;5971:24;5949:20;;;5942:54;6040:17;;;6034:24;6012:20;;;6005:54;5878:2;5863:18;536:571:36;5676:389:40;482:91:35;550:16;;-1:-1:-1;;;;;550:16:35;482:91;;;-1:-1:-1;;;;;6234:32:40;;;6216:51;;6204:2;6189:18;482:91:35;6070:203:40;374:102:35;453:15;;-1:-1:-1;;;;;453:15:35;374:102;;1410:112;1488:27;;-1:-1:-1;;;1488:27:35;;;;1410:112;;285:83;323:7;349:12;-1:-1:-1;;;;;349:12:35;285:83;;4561:1992:33;;;;;;:::i;:::-;;:::i;:::-;;579:86:35;644:14;;-1:-1:-1;;;644:14:35;;;;579:86;;6679:6:40;6667:19;;;6649:38;;6637:2;6622:18;579:86:35;6505:188:40;1528:86:35;1592:15;;-1:-1:-1;;;1592:15:35;;;;1528:86;;7024:451:33;;;;;;:::i;:::-;;:::i;7615:105::-;;;;;;:::i;:::-;;:::i;9381:149::-;;;;;;:::i;:::-;;:::i;536:571:36:-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;725:29:36;:14;-1:-1:-1;725:22:36;:29::i;:::-;699:55;;;;;799:1;772:28;764:58;;;;-1:-1:-1;;;764:58:36;;7927:2:40;764:58:36;;;7909:21:40;7966:2;7946:18;;;7939:30;-1:-1:-1;;;7985:18:40;;;7978:47;8042:18;;764:58:36;;;;;;;;;832:10;841:1;832:10;;:::i;:::-;;-1:-1:-1;879:31:36;:14;832:10;879:24;:31::i;:::-;853:23;;;;:57;;;;920:11;;;;:::i;:::-;;-1:-1:-1;965:31:36;:14;920:11;965:24;:31::i;:::-;942:20;;;:54;1006:11;1015:2;1006:11;;:::i;:::-;;;1052:14;:21;1043:5;:30;1035:65;;;;-1:-1:-1;;;1035:65:36;;8535:2:40;1035:65:36;;;8517:21:40;8574:2;8554:18;;;8547:30;-1:-1:-1;;;8593:18:40;;;8586:52;8655:18;;1035:65:36;8333:346:40;1035:65:36;661:446;536:571;;;:::o;4561:1992:33:-;4646:35;4695:10;4719:20;4752:10;453:15:35;;-1:-1:-1;;;;;453:15:35;;374:102;4752:10:33;-1:-1:-1;;;;;4752:27:33;;4780:14;4752:43;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4752:43:33;;;;;;;;;;;;:::i;:::-;4632:163;;;;;;4814:5;4821:6;4806:22;;;;;-1:-1:-1;;;4806:22:33;;;;;;;;:::i;:::-;;4844:31;4859:15;4844:14;:31::i;:::-;4839:91;;4898:21;;-1:-1:-1;;;4898:21:33;;;;;;;;;;;4839:91;4979:36;5018:60;5045:15;:23;;;5018:13;:60::i;:::-;4979:99;;5151:39;5169:15;:20;;;1243:4:35;1266:29;;;:23;:29;;;;;;;;;1181:121;5151:39:33;5147:96;;;5213:19;;-1:-1:-1;;;5213:19:33;;;;;;;;;;;5147:96;5310:17;5330:42;5348:13;:23;;;5330:17;:42::i;:::-;5411:20;;;;5310:62;;-1:-1:-1;5383:25:33;5462:11;550:16:35;;-1:-1:-1;;;;;550:16:35;;482:91;5462:11:33;5442:31;;5483:14;5500:23;5513:9;5500:12;:23::i;:::-;5483:40;;5534:20;5557:47;5576:17;5595:8;5557:18;:47::i;:::-;5534:70;;5660:18;5681:33;5701:12;5681:19;:33::i;:::-;5660:54;;5729:10;5743:1;5729:15;5725:521;;5835:66;5865:9;5877;5888:12;5835:22;:66::i;:::-;5725:521;;;6014:65;6044:9;6056:10;6068;6014:22;:65::i;:::-;6094:141;6141:9;6169;6196:25;6211:10;6196:12;:25;:::i;:::-;6094:22;:141::i;:::-;6289:20;;;;6261:155;;;13548:25:40;;;13604:2;13589:18;;13582:34;;;6346:10:33;;-1:-1:-1;;;;;6261:155:33;;;6289:20;;6261:155;;13521:18:40;6261:155:33;;;;;;;6500:20;;;;1492:6:37;:29;;;:23;:29;;;;;;;;:51;;-1:-1:-1;;;;;;1492:51:37;-1:-1:-1;;;;;1492:51:37;;;;;-1:-1:-1;1553:36:37;;;:45;;;1608:23;:29;;;;;;:36;;-1:-1:-1;;1608:36:37;;;;;;4622:1931:33;;;;;;;;;;4561:1992;:::o;7024:451::-;11366:10;11355:7;323::35;349:12;-1:-1:-1;;;;;349:12:35;;285:83;11355:7:33;-1:-1:-1;;;;;11355:21:33;;11347:54;;;;-1:-1:-1;;;11347:54:33;;13829:2:40;11347:54:33;;;13811:21:40;13868:2;13848:18;;;13841:30;-1:-1:-1;;;13887:18:40;;;13880:50;13947:18;;11347:54:33;13627:344:40;11347:54:33;7149:14:::1;:19;;7167:1;7149:19:::0;7145:78:::1;;7191:21;;-1:-1:-1::0;;;7191:21:33::1;;;;;;;;;;;7145:78;644:14:35::0;;-1:-1:-1;;;644:14:35;;;;7237:27:33::1;;:14;:27;;::::0;7233:86:::1;;7287:21;;-1:-1:-1::0;;;7287:21:33::1;;;;;;;;;;;7233:86;7333:14:::0;7329:87:::1;;7384:21;;-1:-1:-1::0;;;7384:21:33::1;;;;;;;;;;;7329:87;738:34:37::0;;;;;:6;:34;;;:25;:34;;;;;:44;7024:451:33:o;7615:105::-;11366:10;11355:7;323::35;349:12;-1:-1:-1;;;;;349:12:35;;285:83;11355:7:33;-1:-1:-1;;;;;11355:21:33;;11347:54;;;;-1:-1:-1;;;11347:54:33;;13829:2:40;11347:54:33;;;13811:21:40;13868:2;13848:18;;;13841:30;-1:-1:-1;;;13887:18:40;;;13880:50;13947:18;;11347:54:33;13627:344:40;11347:54:33;419:16:37;:29;;-1:-1:-1;;;;;;419:29:37;-1:-1:-1;;;;;419:29:37;;;;;7615:105:33;:::o;7690:23::-:1;7615:105:::0;:::o;9381:149::-;1378:19:35;;9447:7:33;;1378:19:35;-1:-1:-1;;;1378:19:35;;;;;-1:-1:-1;;;1488:27:35;;;9474:31:33;;;;:6;:31;:::i;:::-;9473:50;;;;:::i;:::-;9466:57;9381:149;-1:-1:-1;;9381:149:33:o;4156:490:27:-;4237:5;4278:10;4262:6;:13;:26;4254:58;;;;-1:-1:-1;;;4254:58:27;;14573:2:40;4254:58:27;;;14555:21:40;14612:2;14592:18;;;14585:30;-1:-1:-1;;;14631:18:40;;;14624:49;14690:18;;4254:58:27;14371:343:40;4254:58:27;4445:19;4467:22;589:1;4467:10;:22;:::i;:::-;4580:24;;;4574:31;;4156:490;-1:-1:-1;;;4156:490:27:o;7152:506::-;7235:7;;7273:24;822:2;7273:10;:24;:::i;:::-;7254:43;;7332:8;7315:6;:13;:25;;7307:59;;;;-1:-1:-1;;;7307:59:27;;14921:2:40;7307:59:27;;;14903:21:40;14960:2;14940:18;;;14933:30;-1:-1:-1;;;14979:18:40;;;14972:51;15040:18;;7307:59:27;14719:345:40;7307:59:27;7592:21;;;7586:28;;7152:506;-1:-1:-1;;7152:506:27:o;6649:497::-;6732:7;;6770:24;822:2;6770:10;:24;:::i;:::-;6751:43;;6829:8;6812:6;:13;:25;;6804:59;;;;-1:-1:-1;;;6804:59:27;;15271:2:40;6804:59:27;;;15253:21:40;15310:2;15290:18;;;15283:30;-1:-1:-1;;;15329:18:40;;;15322:51;15390:18;;6804:59:27;15069:345:40;10149:175:33;10234:4;10300:2;:17;;;10257:39;10278:2;:17;;;880:41:35;;854:7;880:41;;;:25;:41;;;;;;;780:148;10257:39:33;:60;;10149:175;-1:-1:-1;;10149:175:33:o;9702:238::-;9784:7;-1:-1:-1;;;;;;9807:22:33;;;9803:79;;9852:19;;-1:-1:-1;;;9852:19:33;;;;;;;;;;;9803:79;-1:-1:-1;9922:8:33;9702:238::o;10526:249::-;10668:37;;;;;;;;;;;;;;;;-1:-1:-1;;;;;10668:37:33;-1:-1:-1;;;10668:37:33;;;10638:77;;10586:5;;;;-1:-1:-1;;;;;10638:16:33;;;:77;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10603:112;;;10743:15;10732:36;;;;;;;;;;;;:::i;:::-;10725:43;10526:249;-1:-1:-1;;;10526:249:33:o;11011:226::-;11116:7;11150:1;11139:8;:12;;;11135:73;;;11184:12;11195:1;11184:8;:12;:::i;:::-;11177:20;;:2;:20;:::i;:::-;11167:30;;;;:::i;:::-;;;11135:73;-1:-1:-1;11224:6:33;;11011:226;-1:-1:-1;11011:226:33:o;763:205:22:-;902:58;;;-1:-1:-1;;;;;772:32:40;;902:58:22;;;754:51:40;821:18;;;;814:34;;;902:58:22;;;;;;;;;;727:18:40;;;;902:58:22;;;;;;;;-1:-1:-1;;;;;902:58:22;-1:-1:-1;;;902:58:22;;;875:86;;895:5;;875:19;:86::i;:::-;763:205;;;:::o;3747:706::-;4166:23;4192:69;4220:4;4192:69;;;;;;;;;;;;;;;;;4200:5;-1:-1:-1;;;;;4192:27:22;;;:69;;;;;:::i;:::-;4275:17;;4166:95;;-1:-1:-1;4275:21:22;4271:176;;4370:10;4359:30;;;;;;;;;;;;:::i;:::-;4351:85;;;;-1:-1:-1;;;4351:85:22;;17911:2:40;4351:85:22;;;17893:21:40;17950:2;17930:18;;;17923:30;17989:34;17969:18;;;17962:62;-1:-1:-1;;;18040:18:40;;;18033:40;18090:19;;4351:85:22;17709:406:40;3873:223:23;4006:12;4037:52;4059:6;4067:4;4073:1;4076:12;4037:21;:52::i;:::-;4030:59;3873:223;-1:-1:-1;;;;3873:223:23:o;4960:446::-;5125:12;5182:5;5157:21;:30;;5149:81;;;;-1:-1:-1;;;5149:81:23;;18322:2:40;5149:81:23;;;18304:21:40;18361:2;18341:18;;;18334:30;18400:34;18380:18;;;18373:62;-1:-1:-1;;;18451:18:40;;;18444:36;18497:19;;5149:81:23;18120:402:40;5149:81:23;5241:12;5255:23;5282:6;-1:-1:-1;;;;;5282:11:23;5301:5;5308:4;5282:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5240:73;;;;5330:69;5357:6;5365:7;5374:10;5386:12;5330:26;:69::i;:::-;5323:76;4960:446;-1:-1:-1;;;;;;;4960:446:23:o;7466:628::-;7646:12;7674:7;7670:418;;;7701:10;:17;7722:1;7701:22;7697:286;;-1:-1:-1;;;;;1465:19:23;;;7908:60;;;;-1:-1:-1;;;7908:60:23;;18729:2:40;7908:60:23;;;18711:21:40;18768:2;18748:18;;;18741:30;18807:31;18787:18;;;18780:59;18856:18;;7908:60:23;18527:353:40;7908:60:23;-1:-1:-1;8003:10:23;7996:17;;7670:418;8044:33;8052:10;8064:12;8775:17;;:21;8771:379;;9003:10;8997:17;9059:15;9046:10;9042:2;9038:19;9031:44;8771:379;9126:12;9119:20;;-1:-1:-1;;;9119:20:23;;;;;;;;:::i;395:180:40:-;454:6;507:2;495:9;486:7;482:23;478:32;475:52;;;523:1;520;513:12;475:52;-1:-1:-1;546:23:40;;395:180;-1:-1:-1;395:180:40:o;859:127::-;920:10;915:3;911:20;908:1;901:31;951:4;948:1;941:15;975:4;972:1;965:15;991:253;1063:2;1057:9;1105:4;1093:17;;1140:18;1125:34;;1161:22;;;1122:62;1119:88;;;1187:18;;:::i;:::-;1223:2;1216:22;991:253;:::o;1249:255::-;1321:2;1315:9;1363:6;1351:19;;1400:18;1385:34;;1421:22;;;1382:62;1379:88;;;1447:18;;:::i;1509:275::-;1580:2;1574:9;1645:2;1626:13;;-1:-1:-1;;1622:27:40;1610:40;;1680:18;1665:34;;1701:22;;;1662:62;1659:88;;;1727:18;;:::i;:::-;1763:2;1756:22;1509:275;;-1:-1:-1;1509:275:40:o;1789:114::-;1873:4;1866:5;1862:16;1855:5;1852:27;1842:55;;1893:1;1890;1883:12;1908:644;2001:6;2054:2;2042:9;2033:7;2029:23;2025:32;2022:52;;;2070:1;2067;2060:12;2022:52;2103:2;2097:9;2145:2;2137:6;2133:15;2214:6;2202:10;2199:22;2178:18;2166:10;2163:34;2160:62;2157:88;;;2225:18;;:::i;:::-;2261:2;2254:22;2298:23;;2330:29;2298:23;2330:29;:::i;:::-;2368:21;;2450:2;2435:18;;;2422:32;2405:15;;;2398:57;2516:2;2501:18;;;2488:32;2471:15;;;2464:57;;;;-1:-1:-1;2375:6:40;1908:644;-1:-1:-1;1908:644:40:o;2557:250::-;2642:1;2652:113;2666:6;2663:1;2660:13;2652:113;;;2742:11;;;2736:18;2723:11;;;2716:39;2688:2;2681:10;2652:113;;;-1:-1:-1;;2799:1:40;2781:16;;2774:27;2557:250::o;2812:270::-;2853:3;2891:5;2885:12;2918:6;2913:3;2906:19;2934:76;3003:6;2996:4;2991:3;2987:14;2980:4;2973:5;2969:16;2934:76;:::i;:::-;3064:2;3043:15;-1:-1:-1;;3039:29:40;3030:39;;;;3071:4;3026:50;;2812:270;-1:-1:-1;;2812:270:40:o;3087:217::-;3234:2;3223:9;3216:21;3197:4;3254:44;3294:2;3283:9;3279:18;3271:6;3254:44;:::i;3309:117::-;3394:6;3387:5;3383:18;3376:5;3373:29;3363:57;;3416:1;3413;3406:12;3431:245;3489:6;3542:2;3530:9;3521:7;3517:23;3513:32;3510:52;;;3558:1;3555;3548:12;3510:52;3597:9;3584:23;3616:30;3640:5;3616:30;:::i;4060:286::-;4119:6;4172:2;4160:9;4151:7;4147:23;4143:32;4140:52;;;4188:1;4185;4178:12;4140:52;4214:23;;-1:-1:-1;;;;;4266:31:40;;4256:42;;4246:70;;4312:1;4309;4302:12;4351:248;4419:6;4427;4480:2;4468:9;4459:7;4455:23;4451:32;4448:52;;;4496:1;4493;4486:12;4448:52;-1:-1:-1;;4519:23:40;;;4589:2;4574:18;;;4561:32;;-1:-1:-1;4351:248:40:o;4809:186::-;4857:4;4890:18;4882:6;4879:30;4876:56;;;4912:18;;:::i;:::-;-1:-1:-1;4978:2:40;4957:15;-1:-1:-1;;4953:29:40;4984:4;4949:40;;4809:186::o;5000:671::-;5068:6;5121:2;5109:9;5100:7;5096:23;5092:32;5089:52;;;5137:1;5134;5127:12;5089:52;5177:9;5164:23;5210:18;5202:6;5199:30;5196:50;;;5242:1;5239;5232:12;5196:50;5265:22;;5318:4;5310:13;;5306:27;-1:-1:-1;5296:55:40;;5347:1;5344;5337:12;5296:55;5383:2;5370:16;5408:48;5424:31;5452:2;5424:31;:::i;:::-;5408:48;:::i;:::-;5479:2;5472:5;5465:17;5519:7;5514:2;5509;5505;5501:11;5497:20;5494:33;5491:53;;;5540:1;5537;5530:12;5491:53;5595:2;5590;5586;5582:11;5577:2;5570:5;5566:14;5553:45;5639:1;5618:14;;;5634:2;5614:23;5607:34;;;;5622:5;5000:671;-1:-1:-1;;;;5000:671:40:o;6698:313::-;6765:6;6773;6826:2;6814:9;6805:7;6801:23;6797:32;6794:52;;;6842:1;6839;6832:12;6794:52;6881:9;6868:23;6900:30;6924:5;6900:30;:::i;:::-;6949:5;7001:2;6986:18;;;;6973:32;;-1:-1:-1;;;6698:313:40:o;8071:127::-;8132:10;8127:3;8123:20;8120:1;8113:31;8163:4;8160:1;8153:15;8187:4;8184:1;8177:15;8203:125;8268:9;;;8289:10;;;8286:36;;;8302:18;;:::i;8684:134::-;8761:13;;8783:29;8761:13;8783:29;:::i;:::-;8684:134;;;:::o;8823:167::-;8901:13;;8954:10;8943:22;;8933:33;;8923:61;;8980:1;8977;8970:12;8995:136;9073:13;;9095:30;9073:13;9095:30;:::i;9136:175::-;9214:13;;9267:18;9256:30;;9246:41;;9236:69;;9301:1;9298;9291:12;9316:441;9369:5;9422:3;9415:4;9407:6;9403:17;9399:27;9389:55;;9440:1;9437;9430:12;9389:55;9469:6;9463:13;9500:48;9516:31;9544:2;9516:31;:::i;9500:48::-;9573:2;9564:7;9557:19;9619:3;9612:4;9607:2;9599:6;9595:15;9591:26;9588:35;9585:55;;;9636:1;9633;9626:12;9585:55;9649:77;9723:2;9716:4;9707:7;9703:18;9696:4;9688:6;9684:17;9649:77;:::i;9762:1291::-;9836:5;9889:3;9882:4;9874:6;9870:17;9866:27;9856:55;;9907:1;9904;9897:12;9856:55;9936:6;9930:13;9962:4;9985:18;9981:2;9978:26;9975:52;;;10007:18;;:::i;:::-;10047:36;10079:2;10074;10071:1;10067:10;10063:19;10047:36;:::i;:::-;10117:15;;;10203:1;10199:10;;;;10187:23;;10183:32;;;10148:12;;;;10227:15;;;10224:35;;;10255:1;10252;10245:12;10224:35;10291:2;10283:6;10279:15;10303:721;10319:6;10314:3;10311:15;10303:721;;;10397:4;10391:3;10386;10382:13;10378:24;10375:114;;;10443:1;10472:2;10468;10461:14;10375:114;10515:22;;:::i;:::-;10570:3;10564:10;10557:5;10550:25;10626:2;10621:3;10617:12;10611:19;10606:2;10599:5;10595:14;10588:43;10654:2;10699;10694:3;10690:12;10684:19;10716:31;10739:7;10716:31;:::i;:::-;10767:14;;;10760:31;10814:2;10850:12;;;10844:19;10876:31;10844:19;10876:31;:::i;:::-;10927:14;;;10920:31;10964:18;;11002:12;;;;10345:4;10336:14;10303:721;;;-1:-1:-1;11042:5:40;9762:1291;-1:-1:-1;;;;;;9762:1291:40:o;11058:164::-;11134:13;;11183;;11176:21;11166:32;;11156:60;;11212:1;11209;11202:12;11227:1785;11343:6;11351;11359;11412:2;11400:9;11391:7;11387:23;11383:32;11380:52;;;11428:1;11425;11418:12;11380:52;11461:9;11455:16;11490:18;11531:2;11523:6;11520:14;11517:34;;;11547:1;11544;11537:12;11517:34;11570:22;;;;11626:6;11608:16;;;11604:29;11601:49;;;11646:1;11643;11636:12;11601:49;11672:22;;:::i;:::-;11717:31;11745:2;11717:31;:::i;:::-;11710:5;11703:46;11781:41;11818:2;11814;11810:11;11781:41;:::i;:::-;11776:2;11769:5;11765:14;11758:65;11855:41;11892:2;11888;11884:11;11855:41;:::i;:::-;11850:2;11843:5;11839:14;11832:65;11929:41;11966:2;11962;11958:11;11929:41;:::i;:::-;11924:2;11917:5;11913:14;11906:65;12018:3;12014:2;12010:12;12004:19;11998:3;11991:5;11987:15;11980:44;12057:42;12094:3;12090:2;12086:12;12057:42;:::i;:::-;12051:3;12044:5;12040:15;12033:67;12133:41;12169:3;12165:2;12161:12;12133:41;:::i;:::-;12127:3;12120:5;12116:15;12109:66;12214:3;12210:2;12206:12;12200:19;12244:2;12234:8;12231:16;12228:36;;;12260:1;12257;12250:12;12228:36;12297:55;12344:7;12333:8;12329:2;12325:17;12297:55;:::i;:::-;12291:3;12284:5;12280:15;12273:80;;12372:3;12407:41;12444:2;12440;12436:11;12407:41;:::i;:::-;12391:14;;;12384:65;12468:3;12502:11;;;12496:18;12526:16;;;12523:36;;;12555:1;12552;12545:12;12523:36;12591:76;12659:7;12648:8;12644:2;12640:17;12591:76;:::i;:::-;12575:14;;;12568:100;;;;-1:-1:-1;12687:3:40;12728:11;;;12722:18;12706:14;;;12699:42;12579:5;-1:-1:-1;12784:46:40;12826:2;12811:18;;12784:46;:::i;:::-;12774:56;;12876:2;12865:9;12861:18;12855:25;12839:41;;12905:2;12895:8;12892:16;12889:36;;;12921:1;12918;12911:12;12889:36;;12944:62;12998:7;12987:8;12976:9;12972:24;12944:62;:::i;:::-;12934:72;;;11227:1785;;;;;:::o;13241:128::-;13308:9;;;13329:11;;;13326:37;;;13343:18;;:::i;13976:168::-;14049:9;;;14080;;14097:15;;;14091:22;;14077:37;14067:71;;14118:18;;:::i;14149:217::-;14189:1;14215;14205:132;;14259:10;14254:3;14250:20;14247:1;14240:31;14294:4;14291:1;14284:15;14322:4;14319:1;14312:15;14205:132;-1:-1:-1;14351:9:40;;14149:217::o;15419:287::-;15548:3;15586:6;15580:13;15602:66;15661:6;15656:3;15649:4;15641:6;15637:17;15602:66;:::i;:::-;15684:16;;;;;15419:287;-1:-1:-1;;15419:287:40:o;15711:247::-;15779:6;15832:2;15820:9;15811:7;15807:23;15803:32;15800:52;;;15848:1;15845;15838:12;15800:52;15880:9;15874:16;15899:29;15922:5;15899:29;:::i;15963:151::-;16053:4;16046:12;;;16032;;;16028:31;;16071:14;;16068:40;;;16088:18;;:::i;16119:422::-;16208:1;16251:5;16208:1;16265:270;16286:7;16276:8;16273:21;16265:270;;;16345:4;16341:1;16337:6;16333:17;16327:4;16324:27;16321:53;;;16354:18;;:::i;:::-;16404:7;16394:8;16390:22;16387:55;;;16424:16;;;;16387:55;16503:22;;;;16463:15;;;;16265:270;;;16269:3;16119:422;;;;;:::o;16546:806::-;16595:5;16625:8;16615:80;;-1:-1:-1;16666:1:40;16680:5;;16615:80;16714:4;16704:76;;-1:-1:-1;16751:1:40;16765:5;;16704:76;16796:4;16814:1;16809:59;;;;16882:1;16877:130;;;;16789:218;;16809:59;16839:1;16830:10;;16853:5;;;16877:130;16914:3;16904:8;16901:17;16898:43;;;16921:18;;:::i;:::-;-1:-1:-1;;16977:1:40;16963:16;;16992:5;;16789:218;;17091:2;17081:8;17078:16;17072:3;17066:4;17063:13;17059:36;17053:2;17043:8;17040:16;17035:2;17029:4;17026:12;17022:35;17019:77;17016:159;;;-1:-1:-1;17128:19:40;;;17160:5;;17016:159;17207:34;17232:8;17226:4;17207:34;:::i;:::-;17277:6;17273:1;17269:6;17265:19;17256:7;17253:32;17250:58;;;17288:18;;:::i;:::-;17326:20;;16546:806;-1:-1:-1;;;16546:806:40:o;17357:140::-;17415:5;17444:47;17485:4;17475:8;17471:19;17465:4;17444:47;:::i;17502:202::-;17569:6;17622:2;17610:9;17601:7;17597:23;17593:32;17590:52;;;17638:1;17635;17628:12;17590:52;17661:37;17688:9;17661:37;:::i",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "calculateRelayerFee(uint256)": "dc404a0e",
    "chainId()": "9a8a0592",
    "decodeMessage(bytes)": "634d45b2",
    "encodeMessage((uint8,bytes32,uint256))": "1e9b61af",
    "feePrecision()": "35ff1e28",
    "getReceivedMessage(bytes32)": "1b6e4ab6",
    "getRegisteredEmitter(uint16)": "24816abb",
    "isMessageConsumed(bytes32)": "470feb87",
    "isPaused()": "b187bd26",
    "isWhitelistEnabled()": "184d69ab",
    "isWhitelisted(address)": "3af32abf",
    "lockAndSend(bytes32,uint256)": "5df52e23",
    "owner()": "8da5cb5b",
    "redeemAndUnlock(bytes)": "8fe33b9f",
    "registerEmitter(uint16,bytes32)": "bca4b0fa",
    "relayerFeePercentage()": "85e66df4",
    "setWhatTokenAddress(address)": "bfb3c010",
    "whatToken()": "63c09358",
    "wormhole()": "84acd1bb",
    "wormholeFinality()": "0520557b"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"wormhole_\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"chainId_\",\"type\":\"uint16\"},{\"internalType\":\"uint8\",\"name\":\"wormholeFinality_\",\"type\":\"uint8\"},{\"internalType\":\"uint32\",\"name\":\"feePrecision_\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"relayerFeePercentage_\",\"type\":\"uint32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"FailedVaaParseAndVerification\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientContractBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidAmount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidEVMAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidMessageLength\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidWormholeFeeAmount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RecipientZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"VaaAlreadyClaimed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"WhatTokenZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"WormholeZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"WrongChainId\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"WrongEmitterAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"WrongEmitterChainId\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"WrongWormholeFinality\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"recipient\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"normalizedAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"sequence\",\"type\":\"uint64\"}],\"name\":\"TokensLocked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"messageHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"relayer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"relayerFee\",\"type\":\"uint256\"}],\"name\":\"TokensUnlocked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"calculateRelayerFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"chainId\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"encodedMessage\",\"type\":\"bytes\"}],\"name\":\"decodeMessage\",\"outputs\":[{\"components\":[{\"internalType\":\"uint8\",\"name\":\"payloadID\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"recipient\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct WhatTokenBridgeStructs.TransferMessage\",\"name\":\"parsedMessage\",\"type\":\"tuple\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint8\",\"name\":\"payloadID\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"recipient\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct WhatTokenBridgeStructs.TransferMessage\",\"name\":\"parsedMessage\",\"type\":\"tuple\"}],\"name\":\"encodeMessage\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"encodedMessage\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feePrecision\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"}],\"name\":\"getReceivedMessage\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"emitterChainId\",\"type\":\"uint16\"}],\"name\":\"getRegisteredEmitter\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"}],\"name\":\"isMessageConsumed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isPaused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isWhitelistEnabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isWhitelisted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"recipient\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"lockAndSend\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"messageSequence\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"encodedMessage\",\"type\":\"bytes\"}],\"name\":\"redeemAndUnlock\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"emitterChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes32\",\"name\":\"emitterAddress\",\"type\":\"bytes32\"}],\"name\":\"registerEmitter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"relayerFeePercentage\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"whatToken\",\"type\":\"address\"}],\"name\":\"setWhatTokenAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"whatToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wormhole\",\"outputs\":[{\"internalType\":\"contract IWormhole\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wormholeFinality\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"calculateRelayerFee(uint256)\":{\"params\":{\"amount\":\"The amount of tokens being transferred.\"},\"returns\":{\"_0\":\"The calculated relayer fee.\"}},\"constructor\":{\"params\":{\"chainId_\":\"ID of the chain this contract is deployed on.\",\"feePrecision_\":\"Precision of the fee calculation.\",\"relayerFeePercentage_\":\"Percentage of the transferred tokens used as relayer fee.\",\"wormholeFinality_\":\"The number of block confirmations required for finality.\",\"wormhole_\":\"Address of the Wormhole contract.\"}},\"lockAndSend(bytes32,uint256)\":{\"params\":{\"amount\":\"The amount of tokens to be locked and sent.\",\"recipient\":\"Address on the destination chain that will receive the tokens.\"},\"returns\":{\"messageSequence\":\"The sequence number of the Wormhole message.\"}},\"redeemAndUnlock(bytes)\":{\"params\":{\"encodedMessage\":\"The Wormhole message containing token transfer details.\"}},\"registerEmitter(uint16,bytes32)\":{\"details\":\"Only the deployer (owner) can invoke this method\",\"params\":{\"emitterAddress\":\"32-byte address of the contract being registered. For EVM contracts the first 12 bytes should be zeros.\",\"emitterChainId\":\"Wormhole chainId of the contract being registered. See https://book.wormhole.com/reference/contracts.html for more information.\"}},\"setWhatTokenAddress(address)\":{\"params\":{\"whatToken\":\"Address of the token contract.\"}}},\"title\":\"WhatTokenBridge\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"calculateRelayerFee(uint256)\":{\"notice\":\"Calculates the relayer fee based on the transferred amount.\"},\"constructor\":{\"notice\":\"Initializes the WhatTokenBridge contract.\"},\"lockAndSend(bytes32,uint256)\":{\"notice\":\"Locks tokens in the contract and sends a message via Wormhole.\"},\"redeemAndUnlock(bytes)\":{\"notice\":\"Redeems the locked tokens and unlocks them on this chain.         The relayer is rewarded with a fee for redeeming the message.\"},\"registerEmitter(uint16,bytes32)\":{\"notice\":\"Registers foreign emitters (HelloToken contracts) with this contract\"},\"setWhatTokenAddress(address)\":{\"notice\":\"Sets the token contract address for the bridge.\"}},\"notice\":\"This contract handles locking tokens on the source chain and         sending a message via Wormhole to unlock tokens on the destination chain.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/what_token_bridge/WhatTokenBridge.sol\":\"WhatTokenBridge\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@solidity-parser/=node_modules/@solidity-parser/\",\":contracts/=src/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/\",\":modules/=src/modules/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x190dd6f8d592b7e4e930feb7f4313aeb8e1c4ad3154c27ce1cf6a512fc30d8cc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ce8dfb62d0c4fa260d6eec8f1cd47f5f2a044e11bde5b31d18072fa6e7d9010\",\"dweb:/ipfs/QmTyFztU3tLEcEDnqqiaW4UJetqsU77LXc6pjc9oTXCK5u\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x9b72f93be69ca894d8492c244259615c4a742afc8d63720dbc8bb81087d9b238\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5a7b96e511be78d5cdf635c784e6ab8cdd38625bb8cafb8a80914a1c89cf0f6\",\"dweb:/ipfs/QmVzTCwJxQAkjRQHboT5QrvsVJGWQHgfEjeTbvyxoKBrds\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]},\"src/modules/utils/BytesLib.sol\":{\"keccak256\":\"0xba0933bb8fda900b85ad79924aee89a2bd5478f22bd1e4a803b1490d621dd326\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://6ef7372762d0d34430f7a7d189c7e4c1acd9e76eb5d52ac6ad50472d47f82330\",\"dweb:/ipfs/QmSiHuDhZZ1qVzfuwejnJpJ6WkHucvhKJsHdr1X1iXDnPQ\"]},\"src/modules/wormhole/IWormhole.sol\":{\"keccak256\":\"0x50b01b142388fec9d96281638f172ff51bc7635c22ebcdcc51747ccb1f08ead2\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://8053287b25a972ad78c2521de57a0a74b9b43a385b2db576b5abc4968d7f4733\",\"dweb:/ipfs/QmahLC2GKrA1diL8W78XvrUQ1XNysr1GyR27yuDh85HS3Q\"]},\"src/what_token_bridge/WhatTokenBridge.sol\":{\"keccak256\":\"0xf3b0ab00f380898de7dceb1e8d0d4a5421a1a8cac133904683577b3b906fe5cc\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://41129b51915efeb5d7d08c8c00b2563295a3fd133a398be1c82aa3750eddd541\",\"dweb:/ipfs/QmR13jgZtSoR7Y8cy63zQr7HSMtDzoefGtf6sZxodheKqm\"]},\"src/what_token_bridge/WhatTokenBridgeErrors.sol\":{\"keccak256\":\"0x8e893cce49bae7df24feffb4c867df33493060be57654f64875eec2adece5888\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://d75c26eb8f7fc71a8236d8cea844b400b2a14ca44eef3370cc06d5ce3cabf60b\",\"dweb:/ipfs/QmaHDTb2GMVXw8sUrpNnM4JFUm5gQGxHqmjbMxp11gayRc\"]},\"src/what_token_bridge/WhatTokenBridgeGetters.sol\":{\"keccak256\":\"0x7ec0351db1d754dd52a6ff0e57e8d07b82063074db9f5f15073836fbb257447b\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://3021f7ddfeff44340d386fac476695a69d79ca79ab3f92ec809953426793c091\",\"dweb:/ipfs/QmRGtnXjktTMUc5X2H45RZ7PSxi5bfarLJRDHvNbV3feDc\"]},\"src/what_token_bridge/WhatTokenBridgeMessages.sol\":{\"keccak256\":\"0x75f09334df673cc00ccdde77425881bb0ec047a2f3b3b8bec0acd0928bf9f904\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://9c5a1523b3d1e4230461393ff62266fa6b15309fc014492c796f7bfacc3d559e\",\"dweb:/ipfs/QmfCnMKHc3xeUn4hfrgZRn63XCPjAB9S2rNZ5eBKbnN44w\"]},\"src/what_token_bridge/WhatTokenBridgeSetters.sol\":{\"keccak256\":\"0xa2f686b57dfb7351b30177e3280117955152a47962de0e29abe735b224743181\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://407d15c349a01e650438a05c954c5f5c936a16fda3c4a8773492980cf532e9c6\",\"dweb:/ipfs/QmdBxmC6PDmEb8KN9FRpL6hUUKFtaeCy5TuYLjEQSPXGrT\"]},\"src/what_token_bridge/WhatTokenBridgeState.sol\":{\"keccak256\":\"0xbe8c5b244f926aa2de36e0e139a3f4b31cb29c5fa5185f937ee7c6923ce60ba9\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://6b0d5be4879a96f54adbe176ee24c571cc45515dee46473b649799b67854aa4f\",\"dweb:/ipfs/QmZeeZWcJM5Amircfs2Co5rReuKnz3CKArJSguvgLT9KUD\"]},\"src/what_token_bridge/WhatTokenBridgeStructs.sol\":{\"keccak256\":\"0xfc50bb0b0b229120db4f3dd14fb709af516768753fa5d1e716d210b98870ffcb\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://958d8ae81fd24b392ffc1a3d3ddedfdc0b39861d7f5796227e36aab51e721037\",\"dweb:/ipfs/QmYWvkNsuNJbDzTRj1bigw6r41bVp27und21WDeXKwPA6g\"]}},\"version\":1}",
  "metadata": {
    "compiler": { "version": "0.8.19+commit.7dd6d404" },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "wormhole_",
              "type": "address"
            },
            { "internalType": "uint16", "name": "chainId_", "type": "uint16" },
            {
              "internalType": "uint8",
              "name": "wormholeFinality_",
              "type": "uint8"
            },
            {
              "internalType": "uint32",
              "name": "feePrecision_",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "relayerFeePercentage_",
              "type": "uint32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            { "internalType": "string", "name": "reason", "type": "string" }
          ],
          "type": "error",
          "name": "FailedVaaParseAndVerification"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InsufficientContractBalance"
        },
        { "inputs": [], "type": "error", "name": "InvalidAmount" },
        { "inputs": [], "type": "error", "name": "InvalidEVMAddress" },
        { "inputs": [], "type": "error", "name": "InvalidMessageLength" },
        { "inputs": [], "type": "error", "name": "InvalidWormholeFeeAmount" },
        { "inputs": [], "type": "error", "name": "RecipientZeroAddress" },
        { "inputs": [], "type": "error", "name": "TransferFailed" },
        { "inputs": [], "type": "error", "name": "VaaAlreadyClaimed" },
        { "inputs": [], "type": "error", "name": "WhatTokenZeroAddress" },
        { "inputs": [], "type": "error", "name": "WormholeZeroAddress" },
        { "inputs": [], "type": "error", "name": "WrongChainId" },
        { "inputs": [], "type": "error", "name": "WrongEmitterAddress" },
        { "inputs": [], "type": "error", "name": "WrongEmitterChainId" },
        { "inputs": [], "type": "error", "name": "WrongWormholeFinality" },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "recipient",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "normalizedAmount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint64",
              "name": "sequence",
              "type": "uint64",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TokensLocked",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "messageHash",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "relayer",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "relayerFee",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TokensUnlocked",
          "anonymous": false
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "amount", "type": "uint256" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "calculateRelayerFee",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "chainId",
          "outputs": [
            { "internalType": "uint16", "name": "", "type": "uint16" }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "encodedMessage",
              "type": "bytes"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "decodeMessage",
          "outputs": [
            {
              "internalType": "struct WhatTokenBridgeStructs.TransferMessage",
              "name": "parsedMessage",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint8",
                  "name": "payloadID",
                  "type": "uint8"
                },
                {
                  "internalType": "bytes32",
                  "name": "recipient",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct WhatTokenBridgeStructs.TransferMessage",
              "name": "parsedMessage",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint8",
                  "name": "payloadID",
                  "type": "uint8"
                },
                {
                  "internalType": "bytes32",
                  "name": "recipient",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ]
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "encodeMessage",
          "outputs": [
            {
              "internalType": "bytes",
              "name": "encodedMessage",
              "type": "bytes"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "feePrecision",
          "outputs": [
            { "internalType": "uint32", "name": "", "type": "uint32" }
          ]
        },
        {
          "inputs": [
            { "internalType": "bytes32", "name": "hash", "type": "bytes32" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getReceivedMessage",
          "outputs": [
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            { "internalType": "uint256", "name": "amount", "type": "uint256" }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint16",
              "name": "emitterChainId",
              "type": "uint16"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRegisteredEmitter",
          "outputs": [
            { "internalType": "bytes32", "name": "", "type": "bytes32" }
          ]
        },
        {
          "inputs": [
            { "internalType": "bytes32", "name": "hash", "type": "bytes32" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isMessageConsumed",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "isPaused",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "isWhitelistEnabled",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "account", "type": "address" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isWhitelisted",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "recipient",
              "type": "bytes32"
            },
            { "internalType": "uint256", "name": "amount", "type": "uint256" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "lockAndSend",
          "outputs": [
            {
              "internalType": "uint64",
              "name": "messageSequence",
              "type": "uint64"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            { "internalType": "address", "name": "", "type": "address" }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "encodedMessage",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "redeemAndUnlock"
        },
        {
          "inputs": [
            {
              "internalType": "uint16",
              "name": "emitterChainId",
              "type": "uint16"
            },
            {
              "internalType": "bytes32",
              "name": "emitterAddress",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "registerEmitter"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "relayerFeePercentage",
          "outputs": [
            { "internalType": "uint32", "name": "", "type": "uint32" }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "whatToken",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setWhatTokenAddress"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "whatToken",
          "outputs": [
            { "internalType": "address", "name": "", "type": "address" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "wormhole",
          "outputs": [
            {
              "internalType": "contract IWormhole",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "wormholeFinality",
          "outputs": [{ "internalType": "uint8", "name": "", "type": "uint8" }]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "calculateRelayerFee(uint256)": {
            "params": { "amount": "The amount of tokens being transferred." },
            "returns": { "_0": "The calculated relayer fee." }
          },
          "constructor": {
            "params": {
              "chainId_": "ID of the chain this contract is deployed on.",
              "feePrecision_": "Precision of the fee calculation.",
              "relayerFeePercentage_": "Percentage of the transferred tokens used as relayer fee.",
              "wormholeFinality_": "The number of block confirmations required for finality.",
              "wormhole_": "Address of the Wormhole contract."
            }
          },
          "lockAndSend(bytes32,uint256)": {
            "params": {
              "amount": "The amount of tokens to be locked and sent.",
              "recipient": "Address on the destination chain that will receive the tokens."
            },
            "returns": {
              "messageSequence": "The sequence number of the Wormhole message."
            }
          },
          "redeemAndUnlock(bytes)": {
            "params": {
              "encodedMessage": "The Wormhole message containing token transfer details."
            }
          },
          "registerEmitter(uint16,bytes32)": {
            "details": "Only the deployer (owner) can invoke this method",
            "params": {
              "emitterAddress": "32-byte address of the contract being registered. For EVM contracts the first 12 bytes should be zeros.",
              "emitterChainId": "Wormhole chainId of the contract being registered. See https://book.wormhole.com/reference/contracts.html for more information."
            }
          },
          "setWhatTokenAddress(address)": {
            "params": { "whatToken": "Address of the token contract." }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "calculateRelayerFee(uint256)": {
            "notice": "Calculates the relayer fee based on the transferred amount."
          },
          "constructor": {
            "notice": "Initializes the WhatTokenBridge contract."
          },
          "lockAndSend(bytes32,uint256)": {
            "notice": "Locks tokens in the contract and sends a message via Wormhole."
          },
          "redeemAndUnlock(bytes)": {
            "notice": "Redeems the locked tokens and unlocks them on this chain.         The relayer is rewarded with a fee for redeeming the message."
          },
          "registerEmitter(uint16,bytes32)": {
            "notice": "Registers foreign emitters (HelloToken contracts) with this contract"
          },
          "setWhatTokenAddress(address)": {
            "notice": "Sets the token contract address for the bridge."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@openzeppelin/=lib/openzeppelin-contracts/",
        "@solidity-parser/=node_modules/@solidity-parser/",
        "contracts/=src/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        "forge-std/=lib/forge-std/src/",
        "halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/",
        "modules/=src/modules/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/"
      ],
      "optimizer": { "enabled": true, "runs": 200 },
      "metadata": { "bytecodeHash": "ipfs" },
      "compilationTarget": {
        "src/what_token_bridge/WhatTokenBridge.sol": "WhatTokenBridge"
      },
      "evmVersion": "paris",
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol": {
        "keccak256": "0x190dd6f8d592b7e4e930feb7f4313aeb8e1c4ad3154c27ce1cf6a512fc30d8cc",
        "urls": [
          "bzz-raw://4ce8dfb62d0c4fa260d6eec8f1cd47f5f2a044e11bde5b31d18072fa6e7d9010",
          "dweb:/ipfs/QmTyFztU3tLEcEDnqqiaW4UJetqsU77LXc6pjc9oTXCK5u"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b",
        "urls": [
          "bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34",
          "dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/draft-IERC20Permit.sol": {
        "keccak256": "0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329",
        "urls": [
          "bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95",
          "dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0x9b72f93be69ca894d8492c244259615c4a742afc8d63720dbc8bb81087d9b238",
        "urls": [
          "bzz-raw://f5a7b96e511be78d5cdf635c784e6ab8cdd38625bb8cafb8a80914a1c89cf0f6",
          "dweb:/ipfs/QmVzTCwJxQAkjRQHboT5QrvsVJGWQHgfEjeTbvyxoKBrds"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1",
        "urls": [
          "bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269",
          "dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj"
        ],
        "license": "MIT"
      },
      "src/modules/utils/BytesLib.sol": {
        "keccak256": "0xba0933bb8fda900b85ad79924aee89a2bd5478f22bd1e4a803b1490d621dd326",
        "urls": [
          "bzz-raw://6ef7372762d0d34430f7a7d189c7e4c1acd9e76eb5d52ac6ad50472d47f82330",
          "dweb:/ipfs/QmSiHuDhZZ1qVzfuwejnJpJ6WkHucvhKJsHdr1X1iXDnPQ"
        ],
        "license": "Unlicense"
      },
      "src/modules/wormhole/IWormhole.sol": {
        "keccak256": "0x50b01b142388fec9d96281638f172ff51bc7635c22ebcdcc51747ccb1f08ead2",
        "urls": [
          "bzz-raw://8053287b25a972ad78c2521de57a0a74b9b43a385b2db576b5abc4968d7f4733",
          "dweb:/ipfs/QmahLC2GKrA1diL8W78XvrUQ1XNysr1GyR27yuDh85HS3Q"
        ],
        "license": "Apache 2"
      },
      "src/what_token_bridge/WhatTokenBridge.sol": {
        "keccak256": "0xf3b0ab00f380898de7dceb1e8d0d4a5421a1a8cac133904683577b3b906fe5cc",
        "urls": [
          "bzz-raw://41129b51915efeb5d7d08c8c00b2563295a3fd133a398be1c82aa3750eddd541",
          "dweb:/ipfs/QmR13jgZtSoR7Y8cy63zQr7HSMtDzoefGtf6sZxodheKqm"
        ],
        "license": "Apache 2"
      },
      "src/what_token_bridge/WhatTokenBridgeErrors.sol": {
        "keccak256": "0x8e893cce49bae7df24feffb4c867df33493060be57654f64875eec2adece5888",
        "urls": [
          "bzz-raw://d75c26eb8f7fc71a8236d8cea844b400b2a14ca44eef3370cc06d5ce3cabf60b",
          "dweb:/ipfs/QmaHDTb2GMVXw8sUrpNnM4JFUm5gQGxHqmjbMxp11gayRc"
        ],
        "license": "Apache 2"
      },
      "src/what_token_bridge/WhatTokenBridgeGetters.sol": {
        "keccak256": "0x7ec0351db1d754dd52a6ff0e57e8d07b82063074db9f5f15073836fbb257447b",
        "urls": [
          "bzz-raw://3021f7ddfeff44340d386fac476695a69d79ca79ab3f92ec809953426793c091",
          "dweb:/ipfs/QmRGtnXjktTMUc5X2H45RZ7PSxi5bfarLJRDHvNbV3feDc"
        ],
        "license": "Apache 2"
      },
      "src/what_token_bridge/WhatTokenBridgeMessages.sol": {
        "keccak256": "0x75f09334df673cc00ccdde77425881bb0ec047a2f3b3b8bec0acd0928bf9f904",
        "urls": [
          "bzz-raw://9c5a1523b3d1e4230461393ff62266fa6b15309fc014492c796f7bfacc3d559e",
          "dweb:/ipfs/QmfCnMKHc3xeUn4hfrgZRn63XCPjAB9S2rNZ5eBKbnN44w"
        ],
        "license": "Apache 2"
      },
      "src/what_token_bridge/WhatTokenBridgeSetters.sol": {
        "keccak256": "0xa2f686b57dfb7351b30177e3280117955152a47962de0e29abe735b224743181",
        "urls": [
          "bzz-raw://407d15c349a01e650438a05c954c5f5c936a16fda3c4a8773492980cf532e9c6",
          "dweb:/ipfs/QmdBxmC6PDmEb8KN9FRpL6hUUKFtaeCy5TuYLjEQSPXGrT"
        ],
        "license": "Apache 2"
      },
      "src/what_token_bridge/WhatTokenBridgeState.sol": {
        "keccak256": "0xbe8c5b244f926aa2de36e0e139a3f4b31cb29c5fa5185f937ee7c6923ce60ba9",
        "urls": [
          "bzz-raw://6b0d5be4879a96f54adbe176ee24c571cc45515dee46473b649799b67854aa4f",
          "dweb:/ipfs/QmZeeZWcJM5Amircfs2Co5rReuKnz3CKArJSguvgLT9KUD"
        ],
        "license": "Apache 2"
      },
      "src/what_token_bridge/WhatTokenBridgeStructs.sol": {
        "keccak256": "0xfc50bb0b0b229120db4f3dd14fb709af516768753fa5d1e716d210b98870ffcb",
        "urls": [
          "bzz-raw://958d8ae81fd24b392ffc1a3d3ddedfdc0b39861d7f5796227e36aab51e721037",
          "dweb:/ipfs/QmYWvkNsuNJbDzTRj1bigw6r41bVp27und21WDeXKwPA6g"
        ],
        "license": "Apache 2"
      }
    },
    "version": 1
  },
  "id": 33
}
