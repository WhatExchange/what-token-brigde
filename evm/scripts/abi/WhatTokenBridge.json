{
  "abi": [
    {
      "type": "constructor",
      "inputs": [
        { "name": "wormhole_", "type": "address", "internalType": "address" },
        { "name": "chainId_", "type": "uint16", "internalType": "uint16" },
        {
          "name": "wormholeFinality_",
          "type": "uint8",
          "internalType": "uint8"
        },
        { "name": "feePrecision_", "type": "uint32", "internalType": "uint32" },
        {
          "name": "relayerFeePercentage_",
          "type": "uint32",
          "internalType": "uint32"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "calculateRelayerFee",
      "inputs": [
        { "name": "amount", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "chainId",
      "inputs": [],
      "outputs": [{ "name": "", "type": "uint16", "internalType": "uint16" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "decodeMessage",
      "inputs": [
        { "name": "encodedMessage", "type": "bytes", "internalType": "bytes" }
      ],
      "outputs": [
        {
          "name": "parsedMessage",
          "type": "tuple",
          "internalType": "struct WhatTokenBridgeStructs.TransferMessage",
          "components": [
            { "name": "payloadID", "type": "uint8", "internalType": "uint8" },
            {
              "name": "recipient",
              "type": "bytes32",
              "internalType": "bytes32"
            },
            { "name": "amount", "type": "uint256", "internalType": "uint256" }
          ]
        }
      ],
      "stateMutability": "pure"
    },
    {
      "type": "function",
      "name": "encodeMessage",
      "inputs": [
        {
          "name": "parsedMessage",
          "type": "tuple",
          "internalType": "struct WhatTokenBridgeStructs.TransferMessage",
          "components": [
            { "name": "payloadID", "type": "uint8", "internalType": "uint8" },
            {
              "name": "recipient",
              "type": "bytes32",
              "internalType": "bytes32"
            },
            { "name": "amount", "type": "uint256", "internalType": "uint256" }
          ]
        }
      ],
      "outputs": [
        { "name": "encodedMessage", "type": "bytes", "internalType": "bytes" }
      ],
      "stateMutability": "pure"
    },
    {
      "type": "function",
      "name": "feePrecision",
      "inputs": [],
      "outputs": [{ "name": "", "type": "uint32", "internalType": "uint32" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getReceivedMessage",
      "inputs": [
        { "name": "hash", "type": "bytes32", "internalType": "bytes32" }
      ],
      "outputs": [
        { "name": "recipient", "type": "address", "internalType": "address" },
        { "name": "amount", "type": "uint256", "internalType": "uint256" }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getRegisteredEmitter",
      "inputs": [
        { "name": "emitterChainId", "type": "uint16", "internalType": "uint16" }
      ],
      "outputs": [{ "name": "", "type": "bytes32", "internalType": "bytes32" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "isMessageConsumed",
      "inputs": [
        { "name": "hash", "type": "bytes32", "internalType": "bytes32" }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "isPaused",
      "inputs": [],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "isWhitelistEnabled",
      "inputs": [],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "isWhitelisted",
      "inputs": [
        { "name": "account", "type": "address", "internalType": "address" }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "lockAndSend",
      "inputs": [
        { "name": "recipient", "type": "bytes32", "internalType": "bytes32" },
        { "name": "amount", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [
        {
          "name": "messageSequence",
          "type": "uint64",
          "internalType": "uint64"
        }
      ],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "owner",
      "inputs": [],
      "outputs": [{ "name": "", "type": "address", "internalType": "address" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "redeemAndUnlock",
      "inputs": [
        { "name": "encodedMessage", "type": "bytes", "internalType": "bytes" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "registerEmitter",
      "inputs": [
        {
          "name": "emitterChainId",
          "type": "uint16",
          "internalType": "uint16"
        },
        {
          "name": "emitterAddress",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "relayerFeePercentage",
      "inputs": [],
      "outputs": [{ "name": "", "type": "uint32", "internalType": "uint32" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "setWhatTokenAddress",
      "inputs": [
        { "name": "whatToken", "type": "address", "internalType": "address" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "whatToken",
      "inputs": [],
      "outputs": [{ "name": "", "type": "address", "internalType": "address" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "wormhole",
      "inputs": [],
      "outputs": [
        { "name": "", "type": "address", "internalType": "contract IWormhole" }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "wormholeFinality",
      "inputs": [],
      "outputs": [{ "name": "", "type": "uint8", "internalType": "uint8" }],
      "stateMutability": "view"
    },
    {
      "type": "error",
      "name": "FailedVaaParseAndVerification",
      "inputs": [
        { "name": "reason", "type": "string", "internalType": "string" }
      ]
    },
    { "type": "error", "name": "InsufficientContractBalance", "inputs": [] },
    { "type": "error", "name": "InvalidAmount", "inputs": [] },
    { "type": "error", "name": "InvalidEVMAddress", "inputs": [] },
    { "type": "error", "name": "InvalidMessageLength", "inputs": [] },
    { "type": "error", "name": "InvalidWormholeFeeAmount", "inputs": [] },
    { "type": "error", "name": "RecipientZeroAddress", "inputs": [] },
    { "type": "error", "name": "TransferFailed", "inputs": [] },
    { "type": "error", "name": "VaaAlreadyClaimed", "inputs": [] },
    { "type": "error", "name": "WhatTokenZeroAddress", "inputs": [] },
    { "type": "error", "name": "WormholeZeroAddress", "inputs": [] },
    { "type": "error", "name": "WrongChainId", "inputs": [] },
    { "type": "error", "name": "WrongEmitterAddress", "inputs": [] },
    { "type": "error", "name": "WrongEmitterChainId", "inputs": [] },
    { "type": "error", "name": "WrongWormholeFinality", "inputs": [] }
  ],
  "bytecode": {
    "object": "0x60806040523480156200001157600080fd5b50604051620019b2380380620019b283398101604081905262000034916200016b565b60016007556001600160a01b0385166200006157604051630a99537b60e01b815260040160405180910390fd5b8361ffff1660000362000086576040516217e1ef60ea1b815260040160405180910390fd5b8260ff16600003620000ab576040516391f32d0b60e01b815260040160405180910390fd5b600080546001600160a01b03191633179055600180546001600160a01b0319166001600160a01b0387161790556001805461ffff60a01b1916600160a01b61ffff8716021790556001805460ff60b01b1916600160b01b60ff8616021790556002805463ffffffff60a01b1916600160a01b63ffffffff8516021790556002805463ffffffff60c01b1916600160c01b63ffffffff8416021790555050505050620001f9565b805163ffffffff811681146200016657600080fd5b919050565b600080600080600060a086880312156200018457600080fd5b85516001600160a01b03811681146200019c57600080fd5b602087015190955061ffff81168114620001b557600080fd5b604087015190945060ff81168114620001cd57600080fd5b9250620001dd6060870162000151565b9150620001ed6080870162000151565b90509295509295909350565b6117a980620002096000396000f3fe60806040526004361061011f5760003560e01c806363c09358116100a05780639a8a0592116100645780639a8a05921461041d578063b187bd261461044b578063bca4b0fa1461046a578063bfb3c0101461048a578063dc404a0e146104aa57600080fd5b806363c093581461036b57806384acd1bb1461039d57806385e66df4146103bb5780638da5cb5b146103dd5780638fe33b9f146103fb57600080fd5b806335ff1e28116100e757806335ff1e281461025e5780633af32abf14610291578063470feb87146102ca5780635df52e23146102fa578063634d45b21461032657600080fd5b80630520557b14610124578063184d69ab146101555780631b6e4ab6146101805780631e9b61af146101f257806324816abb1461021f575b600080fd5b34801561013057600080fd5b50600154600160b01b900460ff1660405160ff90911681526020015b60405180910390f35b34801561016157600080fd5b50600154600160c01b900460ff165b604051901515815260200161014c565b34801561018c57600080fd5b506101d361019b3660046110d6565b600090815260056020908152604091829020825180840190935280546001600160a01b03168084526001909101549290910182905291565b604080516001600160a01b03909316835260208301919091520161014c565b3480156101fe57600080fd5b5061021261020d366004611192565b6104ca565b60405161014c9190611244565b34801561022b57600080fd5b5061025061023a366004611267565b61ffff1660009081526004602052604090205490565b60405190815260200161014c565b34801561026a57600080fd5b50600254600160a01b900463ffffffff165b60405163ffffffff909116815260200161014c565b34801561029d57600080fd5b506101706102ac366004611284565b6001600160a01b031660009081526003602052604090205460ff1690565b3480156102d657600080fd5b506101706102e53660046110d6565b60009081526006602052604090205460ff1690565b61030d6103083660046112ad565b610517565b60405167ffffffffffffffff909116815260200161014c565b34801561033257600080fd5b506103466103413660046112f7565b6106e3565b60408051825160ff16815260208084015190820152918101519082015260600161014c565b34801561037757600080fd5b506002546001600160a01b03165b6040516001600160a01b03909116815260200161014c565b3480156103a957600080fd5b506001546001600160a01b0316610385565b3480156103c757600080fd5b50600254600160c01b900463ffffffff1661027c565b3480156103e957600080fd5b506000546001600160a01b0316610385565b34801561040757600080fd5b5061041b6104163660046112f7565b6107ef565b005b34801561042957600080fd5b50600154600160a01b900461ffff1660405161ffff909116815260200161014c565b34801561045757600080fd5b50600154600160b81b900460ff16610170565b34801561047657600080fd5b5061041b610485366004611377565b6109da565b34801561049657600080fd5b5061041b6104a5366004611284565b610aca565b3480156104b657600080fd5b506102506104c53660046110d6565b610b4b565b8051602080830151604080850151905160f89490941b6001600160f81b03191692840192909252602183015260418201526060906061016040516020818303038152906040529050919050565b6000610521610b82565b8261053f576040516384bc540160e01b815260040160405180910390fd5b816000036105605760405163162908e360e11b815260040160405180910390fd5b60006105746001546001600160a01b031690565b90506000816001600160a01b0316631a90a2196040518163ffffffff1660e01b8152600401602060405180830381865afa1580156105b6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105da91906113a3565b9050803410156105fc576040516235db2760e81b815260040160405180910390fd5b60006106196106136002546001600160a01b031690565b86610bdb565b6040805160608101825260018152602081018990529081018290529091506000610642826104ca565b9050846001600160a01b031663b19a437e8560008461066b60015460ff600160b01b9091041690565b6040518563ffffffff1660e01b8152600401610689939291906113bc565b60206040518083038185885af11580156106a7573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906106cc919061140b565b955050505050506106dd6001600755565b92915050565b604080516060810182526000808252602082018190529181018290529061070a8382610c11565b60ff168083526001146107585760405162461bcd60e51b81526020600482015260116024820152701a5b9d985b1a59081c185e5b1bd8591251607a1b60448201526064015b60405180910390fd5b61076360018261143c565b905061076f8382610c71565b602080840191909152610782908261143c565b905061078e8382610cd4565b604083015261079e60208261143c565b9050825181146107e95760405162461bcd60e51b81526020600482015260166024820152750d2dcecc2d8d2c840dacae6e6c2ceca40d8cadccee8d60531b604482015260640161074f565b50919050565b60008060006108066001546001600160a01b031690565b6001600160a01b031663c0fd8bde856040518263ffffffff1660e01b81526004016108319190611244565b600060405180830381865afa15801561084e573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526108769190810190611598565b92509250925081819061089c5760405162461bcd60e51b815260040161074f9190611244565b506108a683610d2d565b6108c357604051636b99980160e11b815260040160405180910390fd5b60006108d28460e001516106e3565b90506108f284610140015160009081526006602052604090205460ff1690565b156109105760405163032a925360e41b815260040160405180910390fd5b600061091f8260200151610d59565b6040830151909150600061093282610b4b565b905060006109486002546001600160a01b031690565b9050816000036109625761095d818585610d88565b610981565b61096d813384610d88565b610981818561097c85876116f0565b610d88565b61014088015160408087015160009283526005602090815282842080546001600160a01b0319166001600160a01b038a16178155600190810192909255600690529120805460ff19169091179055505050505050505050565b336109ed6000546001600160a01b031690565b6001600160a01b031614610a3a5760405162461bcd60e51b815260206004820152601460248201527331b0b63632b9103737ba103a34329037bbb732b960611b604482015260640161074f565b8161ffff16600003610a5f5760405163eae0fb0960e01b815260040160405180910390fd5b600154600160a01b900461ffff1661ffff168261ffff1603610a945760405163eae0fb0960e01b815260040160405180910390fd5b80610ab257604051630a99537b60e01b815260040160405180910390fd5b61ffff91909116600090815260046020526040902055565b33610add6000546001600160a01b031690565b6001600160a01b031614610b2a5760405162461bcd60e51b815260206004820152601460248201527331b0b63632b9103737ba103a34329037bbb732b960611b604482015260640161074f565b600280546001600160a01b0319166001600160a01b03831617905550565b50565b60025460009063ffffffff600160a01b8204811691600160c01b900416610b789063ffffffff1684611703565b6106dd919061171a565b600260075403610bd45760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640161074f565b6002600755565b600080610be784610df0565b9050610bf584333086610ea3565b80610bff85610df0565b610c0991906116f0565b949350505050565b600081835111610c595760405162461bcd60e51b8152602060048201526013602482015272746f55696e74385f6f75744f66426f756e647360681b604482015260640161074f565b6000610c6660018461143c565b909301519392505050565b600080610c7f60208461143c565b90508084511015610cca5760405162461bcd60e51b8152602060048201526015602482015274746f427974657333325f6f75744f66426f756e647360581b604482015260640161074f565b9092015192915050565b600080610ce260208461143c565b90508084511015610cca5760405162461bcd60e51b8152602060048201526015602482015274746f55696e743235365f6f75744f66426f756e647360581b604482015260640161074f565b60008160800151610d52836060015161ffff1660009081526004602052604090205490565b1492915050565b60006001600160a01b0319821615610d845760405163e3a39ea160e01b815260040160405180910390fd5b5090565b6040516001600160a01b038316602482015260448101829052610deb90849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152610ee1565b505050565b604080513060248083019190915282518083039091018152604490910182526020810180516001600160e01b03166370a0823160e01b179052905160009182916001600160a01b03851691610e449161173c565b600060405180830381855afa9150503d8060008114610e7f576040519150601f19603f3d011682016040523d82523d6000602084013e610e84565b606091505b5091505080806020019051810190610e9c91906113a3565b9392505050565b6040516001600160a01b0380851660248301528316604482015260648101829052610edb9085906323b872dd60e01b90608401610db4565b50505050565b6000610f36826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316610fb39092919063ffffffff16565b805190915015610deb5780806020019051810190610f549190611758565b610deb5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840161074f565b6060610c09848460008585600080866001600160a01b03168587604051610fda919061173c565b60006040518083038185875af1925050503d8060008114611017576040519150601f19603f3d011682016040523d82523d6000602084013e61101c565b606091505b509150915061102d87838387611038565b979650505050505050565b606083156110a75782516000036110a0576001600160a01b0385163b6110a05760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161074f565b5081610c09565b610c0983838151156110bc5781518083602001fd5b8060405162461bcd60e51b815260040161074f9190611244565b6000602082840312156110e857600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b6040516080810167ffffffffffffffff81118282101715611128576111286110ef565b60405290565b604051610160810167ffffffffffffffff81118282101715611128576111286110ef565b604051601f8201601f1916810167ffffffffffffffff8111828210171561117b5761117b6110ef565b604052919050565b60ff81168114610b4857600080fd5b6000606082840312156111a457600080fd5b6040516060810181811067ffffffffffffffff821117156111c7576111c76110ef565b60405282356111d581611183565b8152602083810135908201526040928301359281019290925250919050565b60005b8381101561120f5781810151838201526020016111f7565b50506000910152565b600081518084526112308160208601602086016111f4565b601f01601f19169290920160200192915050565b602081526000610e9c6020830184611218565b61ffff81168114610b4857600080fd5b60006020828403121561127957600080fd5b8135610e9c81611257565b60006020828403121561129657600080fd5b81356001600160a01b0381168114610e9c57600080fd5b600080604083850312156112c057600080fd5b50508035926020909101359150565b600067ffffffffffffffff8211156112e9576112e96110ef565b50601f01601f191660200190565b60006020828403121561130957600080fd5b813567ffffffffffffffff81111561132057600080fd5b8201601f8101841361133157600080fd5b803561134461133f826112cf565b611152565b81815285602083850101111561135957600080fd5b81602084016020830137600091810160200191909152949350505050565b6000806040838503121561138a57600080fd5b823561139581611257565b946020939093013593505050565b6000602082840312156113b557600080fd5b5051919050565b63ffffffff841681526060602082015260006113db6060830185611218565b905060ff83166040830152949350505050565b805167ffffffffffffffff8116811461140657600080fd5b919050565b60006020828403121561141d57600080fd5b610e9c826113ee565b634e487b7160e01b600052601160045260246000fd5b808201808211156106dd576106dd611426565b805161140681611183565b805163ffffffff8116811461140657600080fd5b805161140681611257565b600082601f83011261148a57600080fd5b815161149861133f826112cf565b8181528460208386010111156114ad57600080fd5b610c098260208301602087016111f4565b600082601f8301126114cf57600080fd5b8151602067ffffffffffffffff8211156114eb576114eb6110ef565b6114f9818360051b01611152565b82815260079290921b8401810191818101908684111561151857600080fd5b8286015b8481101561157d57608081890312156115355760008081fd5b61153d611105565b81518152848201518582015260408083015161155881611183565b9082015260608281015161156b81611183565b9082015283529183019160800161151c565b509695505050505050565b8051801515811461140657600080fd5b6000806000606084860312156115ad57600080fd5b835167ffffffffffffffff808211156115c557600080fd5b9085019061016082880312156115da57600080fd5b6115e261112e565b6115eb8361144f565b81526115f96020840161145a565b602082015261160a6040840161145a565b604082015261161b6060840161146e565b60608201526080830151608082015261163660a084016113ee565b60a082015261164760c0840161144f565b60c082015260e08301518281111561165e57600080fd5b61166a89828601611479565b60e08301525061010061167e81850161145a565b90820152610120838101518381111561169657600080fd5b6116a28a8287016114be565b9183019190915250610140838101519082015294506116c360208701611588565b935060408601519150808211156116d957600080fd5b506116e686828701611479565b9150509250925092565b818103818111156106dd576106dd611426565b80820281158282048414176106dd576106dd611426565b60008261173757634e487b7160e01b600052601260045260246000fd5b500490565b6000825161174e8184602087016111f4565b9190910192915050565b60006020828403121561176a57600080fd5b610e9c8261158856fea2646970667358221220c492acc7b35123532c13213b5e3d6fca77437f9e915b1cf72da484589d4131c564736f6c63430008130033",
    "sourceMap": "580:9320:32:-:0;;;1194:674;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1716:1:17;1821:7;:22;-1:-1:-1;;;;;1379:23:32;;1375:82;;1425:21;;-1:-1:-1;;;1425:21:32;;;;;;;;;;;1375:82;1471:8;:13;;1483:1;1471:13;1467:65;;1507:14;;-1:-1:-1;;;1507:14:32;;;;;;;;;;;1467:65;1546:17;:22;;1567:1;1546:22;1542:83;;1591:23;;-1:-1:-1;;;1591:23:32;;;;;;;;;;;1542:83;216:6:36;:21;;-1:-1:-1;;;;;;216:21:36;1644:10:32;216:21:36;;;309:15;:36;;-1:-1:-1;;;;;;309:36:36;-1:-1:-1;;;;;309:36:36;;;;;517:14;:25;;-1:-1:-1;;;;517:25:36;-1:-1:-1;;;517:25:36;;;;;;;619:23;:34;;-1:-1:-1;;;;619:34:36;-1:-1:-1;;;619:34:36;;;;;;;861:19;:35;;-1:-1:-1;;;;861:35:36;-1:-1:-1;;;861:35:36;;;;;;;991:27;:51;;-1:-1:-1;;;;991:51:36;-1:-1:-1;;;991:51:36;;;;;;;1194:674:32;;;;;580:9320;;14:167:39;92:13;;145:10;134:22;;124:33;;114:61;;171:1;168;161:12;114:61;14:167;;;:::o;186:777::-;287:6;295;303;311;319;372:3;360:9;351:7;347:23;343:33;340:53;;;389:1;386;379:12;340:53;415:16;;-1:-1:-1;;;;;460:31:39;;450:42;;440:70;;506:1;503;496:12;440:70;579:2;564:18;;558:25;529:5;;-1:-1:-1;627:6:39;614:20;;602:33;;592:61;;649:1;646;639:12;592:61;724:2;709:18;;703:25;672:7;;-1:-1:-1;772:4:39;759:18;;747:31;;737:59;;792:1;789;782:12;737:59;815:7;-1:-1:-1;841:48:39;885:2;870:18;;841:48;:::i;:::-;831:58;;908:49;952:3;941:9;937:19;908:49;:::i;:::-;898:59;;186:777;;;;;;;;:::o;:::-;580:9320:32;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x60806040526004361061011f5760003560e01c806363c09358116100a05780639a8a0592116100645780639a8a05921461041d578063b187bd261461044b578063bca4b0fa1461046a578063bfb3c0101461048a578063dc404a0e146104aa57600080fd5b806363c093581461036b57806384acd1bb1461039d57806385e66df4146103bb5780638da5cb5b146103dd5780638fe33b9f146103fb57600080fd5b806335ff1e28116100e757806335ff1e281461025e5780633af32abf14610291578063470feb87146102ca5780635df52e23146102fa578063634d45b21461032657600080fd5b80630520557b14610124578063184d69ab146101555780631b6e4ab6146101805780631e9b61af146101f257806324816abb1461021f575b600080fd5b34801561013057600080fd5b50600154600160b01b900460ff1660405160ff90911681526020015b60405180910390f35b34801561016157600080fd5b50600154600160c01b900460ff165b604051901515815260200161014c565b34801561018c57600080fd5b506101d361019b3660046110d6565b600090815260056020908152604091829020825180840190935280546001600160a01b03168084526001909101549290910182905291565b604080516001600160a01b03909316835260208301919091520161014c565b3480156101fe57600080fd5b5061021261020d366004611192565b6104ca565b60405161014c9190611244565b34801561022b57600080fd5b5061025061023a366004611267565b61ffff1660009081526004602052604090205490565b60405190815260200161014c565b34801561026a57600080fd5b50600254600160a01b900463ffffffff165b60405163ffffffff909116815260200161014c565b34801561029d57600080fd5b506101706102ac366004611284565b6001600160a01b031660009081526003602052604090205460ff1690565b3480156102d657600080fd5b506101706102e53660046110d6565b60009081526006602052604090205460ff1690565b61030d6103083660046112ad565b610517565b60405167ffffffffffffffff909116815260200161014c565b34801561033257600080fd5b506103466103413660046112f7565b6106e3565b60408051825160ff16815260208084015190820152918101519082015260600161014c565b34801561037757600080fd5b506002546001600160a01b03165b6040516001600160a01b03909116815260200161014c565b3480156103a957600080fd5b506001546001600160a01b0316610385565b3480156103c757600080fd5b50600254600160c01b900463ffffffff1661027c565b3480156103e957600080fd5b506000546001600160a01b0316610385565b34801561040757600080fd5b5061041b6104163660046112f7565b6107ef565b005b34801561042957600080fd5b50600154600160a01b900461ffff1660405161ffff909116815260200161014c565b34801561045757600080fd5b50600154600160b81b900460ff16610170565b34801561047657600080fd5b5061041b610485366004611377565b6109da565b34801561049657600080fd5b5061041b6104a5366004611284565b610aca565b3480156104b657600080fd5b506102506104c53660046110d6565b610b4b565b8051602080830151604080850151905160f89490941b6001600160f81b03191692840192909252602183015260418201526060906061016040516020818303038152906040529050919050565b6000610521610b82565b8261053f576040516384bc540160e01b815260040160405180910390fd5b816000036105605760405163162908e360e11b815260040160405180910390fd5b60006105746001546001600160a01b031690565b90506000816001600160a01b0316631a90a2196040518163ffffffff1660e01b8152600401602060405180830381865afa1580156105b6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105da91906113a3565b9050803410156105fc576040516235db2760e81b815260040160405180910390fd5b60006106196106136002546001600160a01b031690565b86610bdb565b6040805160608101825260018152602081018990529081018290529091506000610642826104ca565b9050846001600160a01b031663b19a437e8560008461066b60015460ff600160b01b9091041690565b6040518563ffffffff1660e01b8152600401610689939291906113bc565b60206040518083038185885af11580156106a7573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906106cc919061140b565b955050505050506106dd6001600755565b92915050565b604080516060810182526000808252602082018190529181018290529061070a8382610c11565b60ff168083526001146107585760405162461bcd60e51b81526020600482015260116024820152701a5b9d985b1a59081c185e5b1bd8591251607a1b60448201526064015b60405180910390fd5b61076360018261143c565b905061076f8382610c71565b602080840191909152610782908261143c565b905061078e8382610cd4565b604083015261079e60208261143c565b9050825181146107e95760405162461bcd60e51b81526020600482015260166024820152750d2dcecc2d8d2c840dacae6e6c2ceca40d8cadccee8d60531b604482015260640161074f565b50919050565b60008060006108066001546001600160a01b031690565b6001600160a01b031663c0fd8bde856040518263ffffffff1660e01b81526004016108319190611244565b600060405180830381865afa15801561084e573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526108769190810190611598565b92509250925081819061089c5760405162461bcd60e51b815260040161074f9190611244565b506108a683610d2d565b6108c357604051636b99980160e11b815260040160405180910390fd5b60006108d28460e001516106e3565b90506108f284610140015160009081526006602052604090205460ff1690565b156109105760405163032a925360e41b815260040160405180910390fd5b600061091f8260200151610d59565b6040830151909150600061093282610b4b565b905060006109486002546001600160a01b031690565b9050816000036109625761095d818585610d88565b610981565b61096d813384610d88565b610981818561097c85876116f0565b610d88565b61014088015160408087015160009283526005602090815282842080546001600160a01b0319166001600160a01b038a16178155600190810192909255600690529120805460ff19169091179055505050505050505050565b336109ed6000546001600160a01b031690565b6001600160a01b031614610a3a5760405162461bcd60e51b815260206004820152601460248201527331b0b63632b9103737ba103a34329037bbb732b960611b604482015260640161074f565b8161ffff16600003610a5f5760405163eae0fb0960e01b815260040160405180910390fd5b600154600160a01b900461ffff1661ffff168261ffff1603610a945760405163eae0fb0960e01b815260040160405180910390fd5b80610ab257604051630a99537b60e01b815260040160405180910390fd5b61ffff91909116600090815260046020526040902055565b33610add6000546001600160a01b031690565b6001600160a01b031614610b2a5760405162461bcd60e51b815260206004820152601460248201527331b0b63632b9103737ba103a34329037bbb732b960611b604482015260640161074f565b600280546001600160a01b0319166001600160a01b03831617905550565b50565b60025460009063ffffffff600160a01b8204811691600160c01b900416610b789063ffffffff1684611703565b6106dd919061171a565b600260075403610bd45760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640161074f565b6002600755565b600080610be784610df0565b9050610bf584333086610ea3565b80610bff85610df0565b610c0991906116f0565b949350505050565b600081835111610c595760405162461bcd60e51b8152602060048201526013602482015272746f55696e74385f6f75744f66426f756e647360681b604482015260640161074f565b6000610c6660018461143c565b909301519392505050565b600080610c7f60208461143c565b90508084511015610cca5760405162461bcd60e51b8152602060048201526015602482015274746f427974657333325f6f75744f66426f756e647360581b604482015260640161074f565b9092015192915050565b600080610ce260208461143c565b90508084511015610cca5760405162461bcd60e51b8152602060048201526015602482015274746f55696e743235365f6f75744f66426f756e647360581b604482015260640161074f565b60008160800151610d52836060015161ffff1660009081526004602052604090205490565b1492915050565b60006001600160a01b0319821615610d845760405163e3a39ea160e01b815260040160405180910390fd5b5090565b6040516001600160a01b038316602482015260448101829052610deb90849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152610ee1565b505050565b604080513060248083019190915282518083039091018152604490910182526020810180516001600160e01b03166370a0823160e01b179052905160009182916001600160a01b03851691610e449161173c565b600060405180830381855afa9150503d8060008114610e7f576040519150601f19603f3d011682016040523d82523d6000602084013e610e84565b606091505b5091505080806020019051810190610e9c91906113a3565b9392505050565b6040516001600160a01b0380851660248301528316604482015260648101829052610edb9085906323b872dd60e01b90608401610db4565b50505050565b6000610f36826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316610fb39092919063ffffffff16565b805190915015610deb5780806020019051810190610f549190611758565b610deb5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840161074f565b6060610c09848460008585600080866001600160a01b03168587604051610fda919061173c565b60006040518083038185875af1925050503d8060008114611017576040519150601f19603f3d011682016040523d82523d6000602084013e61101c565b606091505b509150915061102d87838387611038565b979650505050505050565b606083156110a75782516000036110a0576001600160a01b0385163b6110a05760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161074f565b5081610c09565b610c0983838151156110bc5781518083602001fd5b8060405162461bcd60e51b815260040161074f9190611244565b6000602082840312156110e857600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b6040516080810167ffffffffffffffff81118282101715611128576111286110ef565b60405290565b604051610160810167ffffffffffffffff81118282101715611128576111286110ef565b604051601f8201601f1916810167ffffffffffffffff8111828210171561117b5761117b6110ef565b604052919050565b60ff81168114610b4857600080fd5b6000606082840312156111a457600080fd5b6040516060810181811067ffffffffffffffff821117156111c7576111c76110ef565b60405282356111d581611183565b8152602083810135908201526040928301359281019290925250919050565b60005b8381101561120f5781810151838201526020016111f7565b50506000910152565b600081518084526112308160208601602086016111f4565b601f01601f19169290920160200192915050565b602081526000610e9c6020830184611218565b61ffff81168114610b4857600080fd5b60006020828403121561127957600080fd5b8135610e9c81611257565b60006020828403121561129657600080fd5b81356001600160a01b0381168114610e9c57600080fd5b600080604083850312156112c057600080fd5b50508035926020909101359150565b600067ffffffffffffffff8211156112e9576112e96110ef565b50601f01601f191660200190565b60006020828403121561130957600080fd5b813567ffffffffffffffff81111561132057600080fd5b8201601f8101841361133157600080fd5b803561134461133f826112cf565b611152565b81815285602083850101111561135957600080fd5b81602084016020830137600091810160200191909152949350505050565b6000806040838503121561138a57600080fd5b823561139581611257565b946020939093013593505050565b6000602082840312156113b557600080fd5b5051919050565b63ffffffff841681526060602082015260006113db6060830185611218565b905060ff83166040830152949350505050565b805167ffffffffffffffff8116811461140657600080fd5b919050565b60006020828403121561141d57600080fd5b610e9c826113ee565b634e487b7160e01b600052601160045260246000fd5b808201808211156106dd576106dd611426565b805161140681611183565b805163ffffffff8116811461140657600080fd5b805161140681611257565b600082601f83011261148a57600080fd5b815161149861133f826112cf565b8181528460208386010111156114ad57600080fd5b610c098260208301602087016111f4565b600082601f8301126114cf57600080fd5b8151602067ffffffffffffffff8211156114eb576114eb6110ef565b6114f9818360051b01611152565b82815260079290921b8401810191818101908684111561151857600080fd5b8286015b8481101561157d57608081890312156115355760008081fd5b61153d611105565b81518152848201518582015260408083015161155881611183565b9082015260608281015161156b81611183565b9082015283529183019160800161151c565b509695505050505050565b8051801515811461140657600080fd5b6000806000606084860312156115ad57600080fd5b835167ffffffffffffffff808211156115c557600080fd5b9085019061016082880312156115da57600080fd5b6115e261112e565b6115eb8361144f565b81526115f96020840161145a565b602082015261160a6040840161145a565b604082015261161b6060840161146e565b60608201526080830151608082015261163660a084016113ee565b60a082015261164760c0840161144f565b60c082015260e08301518281111561165e57600080fd5b61166a89828601611479565b60e08301525061010061167e81850161145a565b90820152610120838101518381111561169657600080fd5b6116a28a8287016114be565b9183019190915250610140838101519082015294506116c360208701611588565b935060408601519150808211156116d957600080fd5b506116e686828701611479565b9150509250925092565b818103818111156106dd576106dd611426565b80820281158282048414176106dd576106dd611426565b60008261173757634e487b7160e01b600052601260045260246000fd5b500490565b6000825161174e8184602087016111f4565b9190910192915050565b60006020828403121561176a57600080fd5b610e9c8261158856fea2646970667358221220c492acc7b35123532c13213b5e3d6fca77437f9e915b1cf72da484589d4131c564736f6c63430008130033",
    "sourceMap": "580:9320:32:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;671:103:34;;;;;;;;;;-1:-1:-1;744:23:34;;-1:-1:-1;;;744:23:34;;;;671:103;;186:4:39;174:17;;;156:36;;144:2;129:18;671:103:34;;;;;;;;1620;;;;;;;;;;-1:-1:-1;1694:22:34;;-1:-1:-1;;;1694:22:34;;;;1620:103;;;368:14:39;;361:22;343:41;;331:2;316:18;1620:103:34;203:187:39;934:241:34;;;;;;;;;;-1:-1:-1;934:241:34;;;;;:::i;:::-;997:17;1087:29;;;:23;:29;;;;;;;;;1042:74;;;;;;;;;;-1:-1:-1;;;;;1042:74:34;;;;;;;;;;;;;;;;;934:241;;;;;-1:-1:-1;;;;;772:32:39;;;754:51;;836:2;821:18;;814:34;;;;727:18;934:241:34;580:274:39;237:293:35;;;;;;;;;;-1:-1:-1;237:293:35;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;780:148:34:-;;;;;;;;;;-1:-1:-1;780:148:34;;;;;:::i;:::-;880:41;;854:7;880:41;;;:25;:41;;;;;;;780:148;;;;3827:25:39;;;3815:2;3800:18;780:148:34;3681:177:39;1308:96:34;;;;;;;;;;-1:-1:-1;1378:19:34;;-1:-1:-1;;;1378:19:34;;;;1308:96;;;4037:10:39;4025:23;;;4007:42;;3995:2;3980:18;1308:96:34;3863:192:39;1729:116:34;;;;;;;;;;-1:-1:-1;1729:116:34;;;;;:::i;:::-;-1:-1:-1;;;;;1813:25:34;1790:4;1813:25;;;:16;:25;;;;;;;;;1729:116;1181:121;;;;;;;;;;-1:-1:-1;1181:121:34;;;;;:::i;:::-;1243:4;1266:29;;;:23;:29;;;;;;;;;1181:121;2196:1201:32;;;;;;:::i;:::-;;:::i;:::-;;;4778:18:39;4766:31;;;4748:50;;4736:2;4721:18;2196:1201:32;4604:200:39;536:571:35;;;;;;;;;;-1:-1:-1;536:571:35;;;;;:::i;:::-;;:::i;:::-;;;;5912:13:39;;5927:4;5908:24;5890:43;;5989:4;5977:17;;;5971:24;5949:20;;;5942:54;6040:17;;;6034:24;6012:20;;;6005:54;5878:2;5863:18;536:571:35;5676:389:39;482:91:34;;;;;;;;;;-1:-1:-1;550:16:34;;-1:-1:-1;;;;;550:16:34;482:91;;;-1:-1:-1;;;;;6234:32:39;;;6216:51;;6204:2;6189:18;482:91:34;6070:203:39;374:102:34;;;;;;;;;;-1:-1:-1;453:15:34;;-1:-1:-1;;;;;453:15:34;374:102;;1410:112;;;;;;;;;;-1:-1:-1;1488:27:34;;-1:-1:-1;;;1488:27:34;;;;1410:112;;285:83;;;;;;;;;;-1:-1:-1;323:7:34;349:12;-1:-1:-1;;;;;349:12:34;285:83;;3654:1863:32;;;;;;;;;;-1:-1:-1;3654:1863:32;;;;;:::i;:::-;;:::i;:::-;;579:86:34;;;;;;;;;;-1:-1:-1;644:14:34;;-1:-1:-1;;;644:14:34;;;;579:86;;6679:6:39;6667:19;;;6649:38;;6637:2;6622:18;579:86:34;6505:188:39;1528:86:34;;;;;;;;;;-1:-1:-1;1592:15:34;;-1:-1:-1;;;1592:15:34;;;;1528:86;;5987:451:32;;;;;;;;;;-1:-1:-1;5987:451:32;;;;;:::i;:::-;;:::i;6578:105::-;;;;;;;;;;-1:-1:-1;6578:105:32;;;;;:::i;:::-;;:::i;8325:149::-;;;;;;;;;;-1:-1:-1;8325:149:32;;;;;:::i;:::-;;:::i;237:293:35:-;419:23;;456;;;;;493:20;;;;;389:134;;7602:3:39;7580:16;;;;-1:-1:-1;;;;;;7576:36:39;389:134:35;;;7564:49:39;;;;7629:11;;;7622:27;7665:12;;;7658:28;333:27:35;;7702:12:39;;389:134:35;;;;;;;;;;;;372:151;;237:293;;;:::o;2196:1201:32:-;2311:22;2261:21:17;:19;:21::i;:::-;2349:9:32;2345:83:::1;;2395:22;;-1:-1:-1::0;;;2395:22:32::1;;;;;;;;;;;2345:83;2442:6;2452:1;2442:11:::0;2438:64:::1;;2476:15;;-1:-1:-1::0;;;2476:15:32::1;;;;;;;;;;;2438:64;2512:18;2533:10;453:15:34::0;;-1:-1:-1;;;;;453:15:34;;374:102;2533:10:32::1;2512:31;;2553:19;2575:8;-1:-1:-1::0;;;;;2575:19:32::1;;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2553:43;;2623:11;2611:9;:23;2607:87;;;2657:26;;-1:-1:-1::0;;;2657:26:32::1;;;;;;;;;;;2607:87;2785:22;2810:34;2824:11;550:16:34::0;;-1:-1:-1;;;;;550:16:34;;482:91;2824:11:32::1;2837:6;2810:13;:34::i;:::-;2966:130;::::0;;::::1;::::0;::::1;::::0;;3013:1:::1;2966:130:::0;;::::1;::::0;::::1;::::0;;;;;;;;;2785:59;;-1:-1:-1;2927:36:32::1;3137:28;2966:130:::0;3137:13:::1;:28::i;:::-;3107:58;;3262:8;-1:-1:-1::0;;;;;3262:23:32::1;;3293:11;3319:1;3334:14;3362:18;744:23:34::0;;;-1:-1:-1;;;744:23:34;;;;;671:103;3362:18:32::1;3262:128;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3244:146;;2335:1062;;;;;2303:20:17::0;1716:1;2809:7;:22;2629:209;2303:20;2196:1201:32;;;;:::o;536:571:35:-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;725:29:35;:14;-1:-1:-1;725:22:35;:29::i;:::-;699:55;;;;;799:1;772:28;764:58;;;;-1:-1:-1;;;764:58:35;;8902:2:39;764:58:35;;;8884:21:39;8941:2;8921:18;;;8914:30;-1:-1:-1;;;8960:18:39;;;8953:47;9017:18;;764:58:35;;;;;;;;;832:10;841:1;832:10;;:::i;:::-;;-1:-1:-1;879:31:35;:14;832:10;879:24;:31::i;:::-;853:23;;;;:57;;;;920:11;;;;:::i;:::-;;-1:-1:-1;965:31:35;:14;920:11;965:24;:31::i;:::-;942:20;;;:54;1006:11;1015:2;1006:11;;:::i;:::-;;;1052:14;:21;1043:5;:30;1035:65;;;;-1:-1:-1;;;1035:65:35;;9510:2:39;1035:65:35;;;9492:21:39;9549:2;9529:18;;;9522:30;-1:-1:-1;;;9568:18:39;;;9561:52;9630:18;;1035:65:35;9308:346:39;1035:65:35;661:446;536:571;;;:::o;3654:1863:32:-;3739:35;3788:10;3812:20;3845:10;453:15:34;;-1:-1:-1;;;;;453:15:34;;374:102;3845:10:32;-1:-1:-1;;;;;3845:27:32;;3873:14;3845:43;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3845:43:32;;;;;;;;;;;;:::i;:::-;3725:163;;;;;;3907:5;3914:6;3899:22;;;;;-1:-1:-1;;;3899:22:32;;;;;;;;:::i;:::-;;3937:30;3951:15;3937:13;:30::i;:::-;3932:90;;3990:21;;-1:-1:-1;;;3990:21:32;;;;;;;;;;;3932:90;4071:36;4110:60;4137:15;:23;;;4110:13;:60::i;:::-;4071:99;;4243:39;4261:15;:20;;;1243:4:34;1266:29;;;:23;:29;;;;;;;;;1181:121;4243:39:32;4239:96;;;4305:19;;-1:-1:-1;;;4305:19:32;;;;;;;;;;;4239:96;4402:17;4422:41;4439:13;:23;;;4422:16;:41::i;:::-;4502:20;;;;4402:61;;-1:-1:-1;4474:25:32;4599:38;4502:20;4599:19;:38::i;:::-;4578:59;;4648:24;4675:11;550:16:34;;-1:-1:-1;;;;;550:16:34;;482:91;4675:11:32;4648:38;;4701:10;4715:1;4701:15;4697:676;;4807:140;4854:16;4889:9;4916:17;4807:22;:140::i;:::-;4697:676;;;5060:134;5107:16;5142:10;5170;5060:22;:134::i;:::-;5209:153;5256:16;5291:9;5318:30;5338:10;5318:17;:30;:::i;:::-;5209:22;:153::i;:::-;5456:20;;;;5489;;;;;1492:6:36;:29;;;:23;:29;;;;;;;:51;;-1:-1:-1;;;;;;1492:51:36;-1:-1:-1;;;;;1492:51:36;;;;;-1:-1:-1;1553:36:36;;;:45;;;;1608:23;:29;;;;:36;;-1:-1:-1;;1608:36:36;;;;;;3715:1802:32;;;;;;;;3654:1863;:::o;5987:451::-;9845:10;9834:7;323::34;349:12;-1:-1:-1;;;;;349:12:34;;285:83;9834:7:32;-1:-1:-1;;;;;9834:21:32;;9826:54;;;;-1:-1:-1;;;9826:54:32;;14371:2:39;9826:54:32;;;14353:21:39;14410:2;14390:18;;;14383:30;-1:-1:-1;;;14429:18:39;;;14422:50;14489:18;;9826:54:32;14169:344:39;9826:54:32;6112:14:::1;:19;;6130:1;6112:19:::0;6108:78:::1;;6154:21;;-1:-1:-1::0;;;6154:21:32::1;;;;;;;;;;;6108:78;644:14:34::0;;-1:-1:-1;;;644:14:34;;;;6200:27:32::1;;:14;:27;;::::0;6196:86:::1;;6250:21;;-1:-1:-1::0;;;6250:21:32::1;;;;;;;;;;;6196:86;6296:14:::0;6292:87:::1;;6347:21;;-1:-1:-1::0;;;6347:21:32::1;;;;;;;;;;;6292:87;738:34:36::0;;;;;:6;:34;;;:25;:34;;;;;:44;5987:451:32:o;6578:105::-;9845:10;9834:7;323::34;349:12;-1:-1:-1;;;;;349:12:34;;285:83;9834:7:32;-1:-1:-1;;;;;9834:21:32;;9826:54;;;;-1:-1:-1;;;9826:54:32;;14371:2:39;9826:54:32;;;14353:21:39;14410:2;14390:18;;;14383:30;-1:-1:-1;;;14429:18:39;;;14422:50;14489:18;;9826:54:32;14169:344:39;9826:54:32;419:16:36;:29;;-1:-1:-1;;;;;;419:29:36;-1:-1:-1;;;;;419:29:36;;;;;6578:105:32;:::o;6653:23::-:1;6578:105:::0;:::o;8325:149::-;1378:19:34;;8391:7:32;;1378:19:34;-1:-1:-1;;;1378:19:34;;;;;-1:-1:-1;;;1488:27:34;;;8418:31:32;;;;:6;:31;:::i;:::-;8417:50;;;;:::i;2336:287:17:-;1759:1;2468:7;;:19;2460:63;;;;-1:-1:-1;;;2460:63:17;;15115:2:39;2460:63:17;;;15097:21:39;15154:2;15134:18;;;15127:30;15193:33;15173:18;;;15166:61;15244:18;;2460:63:17;14913:355:39;2460:63:17;1759:1;2598:7;:18;2336:287::o;6943:493:32:-;7037:7;7056:21;7080:17;7091:5;7080:10;:17::i;:::-;7056:41;;7167:134;7214:5;7234:10;7266:4;7285:6;7167:26;:134::i;:::-;7416:13;7396:17;7407:5;7396:10;:17::i;:::-;:33;;;;:::i;:::-;7389:40;6943:493;-1:-1:-1;;;;6943:493:32:o;4156:490:27:-;4237:5;4278:10;4262:6;:13;:26;4254:58;;;;-1:-1:-1;;;4254:58:27;;15475:2:39;4254:58:27;;;15457:21:39;15514:2;15494:18;;;15487:30;-1:-1:-1;;;15533:18:39;;;15526:49;15592:18;;4254:58:27;15273:343:39;4254:58:27;4445:19;4467:22;589:1;4467:10;:22;:::i;:::-;4580:24;;;4574:31;;4156:490;-1:-1:-1;;;4156:490:27:o;7152:506::-;7235:7;;7273:24;822:2;7273:10;:24;:::i;:::-;7254:43;;7332:8;7315:6;:13;:25;;7307:59;;;;-1:-1:-1;;;7307:59:27;;15823:2:39;7307:59:27;;;15805:21:39;15862:2;15842:18;;;15835:30;-1:-1:-1;;;15881:18:39;;;15874:51;15942:18;;7307:59:27;15621:345:39;7307:59:27;7592:21;;;7586:28;;7152:506;-1:-1:-1;;7152:506:27:o;6649:497::-;6732:7;;6770:24;822:2;6770:10;:24;:::i;:::-;6751:43;;6829:8;6812:6;:13;:25;;6804:59;;;;-1:-1:-1;;;6804:59:27;;16173:2:39;6804:59:27;;;16155:21:39;16212:2;16192:18;;;16185:30;-1:-1:-1;;;16231:18:39;;;16224:51;16292:18;;6804:59:27;15971:345:39;9092:174:32;9176:4;9242:2;:17;;;9199:39;9220:2;:17;;;880:41:34;;854:7;880:41;;;:25;:41;;;;;;;780:148;9199:39:32;:60;;9092:174;-1:-1:-1;;9092:174:32:o;8646:237::-;8727:7;-1:-1:-1;;;;;;8750:22:32;;;8746:79;;8795:19;;-1:-1:-1;;;8795:19:32;;;;;;;;;;;8746:79;-1:-1:-1;8865:8:32;8646:237::o;763:205:22:-;902:58;;-1:-1:-1;;;;;772:32:39;;902:58:22;;;754:51:39;821:18;;;814:34;;;875:86:22;;895:5;;-1:-1:-1;;;925:23:22;727:18:39;;902:58:22;;;;-1:-1:-1;;902:58:22;;;;;;;;;;;;;;-1:-1:-1;;;;;902:58:22;-1:-1:-1;;;;;;902:58:22;;;;;;;;;;875:19;:86::i;:::-;763:205;;;:::o;7442:333:32:-;7637:64;;;7695:4;7637:64;;;;6216:51:39;;;;7637:64:32;;;;;;;;;;6189:18:39;;;;7637:64:32;;;;;;;-1:-1:-1;;;;;7637:64:32;-1:-1:-1;;;7637:64:32;;;7607:104;;7500:15;;;;-1:-1:-1;;;;;7607:16:32;;;:104;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7573:138;;;7742:14;7731:37;;;;;;;;;;;;:::i;:::-;7721:47;7442:333;-1:-1:-1;;;7442:333:32:o;974:241:22:-;1139:68;;-1:-1:-1;;;;;16871:15:39;;;1139:68:22;;;16853:34:39;16923:15;;16903:18;;;16896:43;16955:18;;;16948:34;;;1112:96:22;;1132:5;;-1:-1:-1;;;1162:27:22;16788:18:39;;1139:68:22;16613:375:39;1112:96:22;974:241;;;;:::o;3747:706::-;4166:23;4192:69;4220:4;4192:69;;;;;;;;;;;;;;;;;4200:5;-1:-1:-1;;;;;4192:27:22;;;:69;;;;;:::i;:::-;4275:17;;4166:95;;-1:-1:-1;4275:21:22;4271:176;;4370:10;4359:30;;;;;;;;;;;;:::i;:::-;4351:85;;;;-1:-1:-1;;;4351:85:22;;17402:2:39;4351:85:22;;;17384:21:39;17441:2;17421:18;;;17414:30;17480:34;17460:18;;;17453:62;-1:-1:-1;;;17531:18:39;;;17524:40;17581:19;;4351:85:22;17200:406:39;3873:223:23;4006:12;4037:52;4059:6;4067:4;4073:1;4076:12;4006;5241;5255:23;5282:6;-1:-1:-1;;;;;5282:11:23;5301:5;5308:4;5282:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5240:73;;;;5330:69;5357:6;5365:7;5374:10;5386:12;5330:26;:69::i;:::-;5323:76;4960:446;-1:-1:-1;;;;;;;4960:446:23:o;7466:628::-;7646:12;7674:7;7670:418;;;7701:10;:17;7722:1;7701:22;7697:286;;-1:-1:-1;;;;;1465:19:23;;;7908:60;;;;-1:-1:-1;;;7908:60:23;;18220:2:39;7908:60:23;;;18202:21:39;18259:2;18239:18;;;18232:30;18298:31;18278:18;;;18271:59;18347:18;;7908:60:23;18018:353:39;7908:60:23;-1:-1:-1;8003:10:23;7996:17;;7670:418;8044:33;8052:10;8064:12;8775:17;;:21;8771:379;;9003:10;8997:17;9059:15;9046:10;9042:2;9038:19;9031:44;8771:379;9126:12;9119:20;;-1:-1:-1;;;9119:20:23;;;;;;;;:::i;395:180:39:-;454:6;507:2;495:9;486:7;482:23;478:32;475:52;;;523:1;520;513:12;475:52;-1:-1:-1;546:23:39;;395:180;-1:-1:-1;395:180:39:o;859:127::-;920:10;915:3;911:20;908:1;901:31;951:4;948:1;941:15;975:4;972:1;965:15;991:253;1063:2;1057:9;1105:4;1093:17;;1140:18;1125:34;;1161:22;;;1122:62;1119:88;;;1187:18;;:::i;:::-;1223:2;1216:22;991:253;:::o;1249:255::-;1321:2;1315:9;1363:6;1351:19;;1400:18;1385:34;;1421:22;;;1382:62;1379:88;;;1447:18;;:::i;1509:275::-;1580:2;1574:9;1645:2;1626:13;;-1:-1:-1;;1622:27:39;1610:40;;1680:18;1665:34;;1701:22;;;1662:62;1659:88;;;1727:18;;:::i;:::-;1763:2;1756:22;1509:275;;-1:-1:-1;1509:275:39:o;1789:114::-;1873:4;1866:5;1862:16;1855:5;1852:27;1842:55;;1893:1;1890;1883:12;1908:644;2001:6;2054:2;2042:9;2033:7;2029:23;2025:32;2022:52;;;2070:1;2067;2060:12;2022:52;2103:2;2097:9;2145:2;2137:6;2133:15;2214:6;2202:10;2199:22;2178:18;2166:10;2163:34;2160:62;2157:88;;;2225:18;;:::i;:::-;2261:2;2254:22;2298:23;;2330:29;2298:23;2330:29;:::i;:::-;2368:21;;2450:2;2435:18;;;2422:32;2405:15;;;2398:57;2516:2;2501:18;;;2488:32;2471:15;;;2464:57;;;;-1:-1:-1;2375:6:39;1908:644;-1:-1:-1;1908:644:39:o;2557:250::-;2642:1;2652:113;2666:6;2663:1;2660:13;2652:113;;;2742:11;;;2736:18;2723:11;;;2716:39;2688:2;2681:10;2652:113;;;-1:-1:-1;;2799:1:39;2781:16;;2774:27;2557:250::o;2812:270::-;2853:3;2891:5;2885:12;2918:6;2913:3;2906:19;2934:76;3003:6;2996:4;2991:3;2987:14;2980:4;2973:5;2969:16;2934:76;:::i;:::-;3064:2;3043:15;-1:-1:-1;;3039:29:39;3030:39;;;;3071:4;3026:50;;2812:270;-1:-1:-1;;2812:270:39:o;3087:217::-;3234:2;3223:9;3216:21;3197:4;3254:44;3294:2;3283:9;3279:18;3271:6;3254:44;:::i;3309:117::-;3394:6;3387:5;3383:18;3376:5;3373:29;3363:57;;3416:1;3413;3406:12;3431:245;3489:6;3542:2;3530:9;3521:7;3517:23;3513:32;3510:52;;;3558:1;3555;3548:12;3510:52;3597:9;3584:23;3616:30;3640:5;3616:30;:::i;4060:286::-;4119:6;4172:2;4160:9;4151:7;4147:23;4143:32;4140:52;;;4188:1;4185;4178:12;4140:52;4214:23;;-1:-1:-1;;;;;4266:31:39;;4256:42;;4246:70;;4312:1;4309;4302:12;4351:248;4419:6;4427;4480:2;4468:9;4459:7;4455:23;4451:32;4448:52;;;4496:1;4493;4486:12;4448:52;-1:-1:-1;;4519:23:39;;;4589:2;4574:18;;;4561:32;;-1:-1:-1;4351:248:39:o;4809:186::-;4857:4;4890:18;4882:6;4879:30;4876:56;;;4912:18;;:::i;:::-;-1:-1:-1;4978:2:39;4957:15;-1:-1:-1;;4953:29:39;4984:4;4949:40;;4809:186::o;5000:671::-;5068:6;5121:2;5109:9;5100:7;5096:23;5092:32;5089:52;;;5137:1;5134;5127:12;5089:52;5177:9;5164:23;5210:18;5202:6;5199:30;5196:50;;;5242:1;5239;5232:12;5196:50;5265:22;;5318:4;5310:13;;5306:27;-1:-1:-1;5296:55:39;;5347:1;5344;5337:12;5296:55;5383:2;5370:16;5408:48;5424:31;5452:2;5424:31;:::i;:::-;5408:48;:::i;:::-;5479:2;5472:5;5465:17;5519:7;5514:2;5509;5505;5501:11;5497:20;5494:33;5491:53;;;5540:1;5537;5530:12;5491:53;5595:2;5590;5586;5582:11;5577:2;5570:5;5566:14;5553:45;5639:1;5618:14;;;5634:2;5614:23;5607:34;;;;5622:5;5000:671;-1:-1:-1;;;;5000:671:39:o;6698:313::-;6765:6;6773;6826:2;6814:9;6805:7;6801:23;6797:32;6794:52;;;6842:1;6839;6832:12;6794:52;6881:9;6868:23;6900:30;6924:5;6900:30;:::i;:::-;6949:5;7001:2;6986:18;;;;6973:32;;-1:-1:-1;;;6698:313:39:o;7725:184::-;7795:6;7848:2;7836:9;7827:7;7823:23;7819:32;7816:52;;;7864:1;7861;7854:12;7816:52;-1:-1:-1;7887:16:39;;7725:184;-1:-1:-1;7725:184:39:o;7914:390::-;8132:10;8124:6;8120:23;8109:9;8102:42;8180:2;8175;8164:9;8160:18;8153:30;8083:4;8200:44;8240:2;8229:9;8225:18;8217:6;8200:44;:::i;:::-;8192:52;;8292:4;8284:6;8280:17;8275:2;8264:9;8260:18;8253:45;7914:390;;;;;;:::o;8309:175::-;8387:13;;8440:18;8429:30;;8419:41;;8409:69;;8474:1;8471;8464:12;8409:69;8309:175;;;:::o;8489:206::-;8558:6;8611:2;8599:9;8590:7;8586:23;8582:32;8579:52;;;8627:1;8624;8617:12;8579:52;8650:39;8679:9;8650:39;:::i;9046:127::-;9107:10;9102:3;9098:20;9095:1;9088:31;9138:4;9135:1;9128:15;9162:4;9159:1;9152:15;9178:125;9243:9;;;9264:10;;;9261:36;;;9277:18;;:::i;9659:134::-;9736:13;;9758:29;9736:13;9758:29;:::i;9798:167::-;9876:13;;9929:10;9918:22;;9908:33;;9898:61;;9955:1;9952;9945:12;9970:136;10048:13;;10070:30;10048:13;10070:30;:::i;10111:441::-;10164:5;10217:3;10210:4;10202:6;10198:17;10194:27;10184:55;;10235:1;10232;10225:12;10184:55;10264:6;10258:13;10295:48;10311:31;10339:2;10311:31;:::i;10295:48::-;10368:2;10359:7;10352:19;10414:3;10407:4;10402:2;10394:6;10390:15;10386:26;10383:35;10380:55;;;10431:1;10428;10421:12;10380:55;10444:77;10518:2;10511:4;10502:7;10498:18;10491:4;10483:6;10479:17;10444:77;:::i;10557:1291::-;10631:5;10684:3;10677:4;10669:6;10665:17;10661:27;10651:55;;10702:1;10699;10692:12;10651:55;10731:6;10725:13;10757:4;10780:18;10776:2;10773:26;10770:52;;;10802:18;;:::i;:::-;10842:36;10874:2;10869;10866:1;10862:10;10858:19;10842:36;:::i;:::-;10912:15;;;10998:1;10994:10;;;;10982:23;;10978:32;;;10943:12;;;;11022:15;;;11019:35;;;11050:1;11047;11040:12;11019:35;11086:2;11078:6;11074:15;11098:721;11114:6;11109:3;11106:15;11098:721;;;11192:4;11186:3;11181;11177:13;11173:24;11170:114;;;11238:1;11267:2;11263;11256:14;11170:114;11310:22;;:::i;:::-;11365:3;11359:10;11352:5;11345:25;11421:2;11416:3;11412:12;11406:19;11401:2;11394:5;11390:14;11383:43;11449:2;11494;11489:3;11485:12;11479:19;11511:31;11534:7;11511:31;:::i;:::-;11562:14;;;11555:31;11609:2;11645:12;;;11639:19;11671:31;11639:19;11671:31;:::i;:::-;11722:14;;;11715:31;11759:18;;11797:12;;;;11140:4;11131:14;11098:721;;;-1:-1:-1;11837:5:39;10557:1291;-1:-1:-1;;;;;;10557:1291:39:o;11853:164::-;11929:13;;11978;;11971:21;11961:32;;11951:60;;12007:1;12004;11997:12;12022:1785;12138:6;12146;12154;12207:2;12195:9;12186:7;12182:23;12178:32;12175:52;;;12223:1;12220;12213:12;12175:52;12256:9;12250:16;12285:18;12326:2;12318:6;12315:14;12312:34;;;12342:1;12339;12332:12;12312:34;12365:22;;;;12421:6;12403:16;;;12399:29;12396:49;;;12441:1;12438;12431:12;12396:49;12467:22;;:::i;:::-;12512:31;12540:2;12512:31;:::i;:::-;12505:5;12498:46;12576:41;12613:2;12609;12605:11;12576:41;:::i;:::-;12571:2;12564:5;12560:14;12553:65;12650:41;12687:2;12683;12679:11;12650:41;:::i;:::-;12645:2;12638:5;12634:14;12627:65;12724:41;12761:2;12757;12753:11;12724:41;:::i;:::-;12719:2;12712:5;12708:14;12701:65;12813:3;12809:2;12805:12;12799:19;12793:3;12786:5;12782:15;12775:44;12852:42;12889:3;12885:2;12881:12;12852:42;:::i;:::-;12846:3;12839:5;12835:15;12828:67;12928:41;12964:3;12960:2;12956:12;12928:41;:::i;:::-;12922:3;12915:5;12911:15;12904:66;13009:3;13005:2;13001:12;12995:19;13039:2;13029:8;13026:16;13023:36;;;13055:1;13052;13045:12;13023:36;13092:55;13139:7;13128:8;13124:2;13120:17;13092:55;:::i;:::-;13086:3;13079:5;13075:15;13068:80;;13167:3;13202:41;13239:2;13235;13231:11;13202:41;:::i;:::-;13186:14;;;13179:65;13263:3;13297:11;;;13291:18;13321:16;;;13318:36;;;13350:1;13347;13340:12;13318:36;13386:76;13454:7;13443:8;13439:2;13435:17;13386:76;:::i;:::-;13370:14;;;13363:100;;;;-1:-1:-1;13482:3:39;13523:11;;;13517:18;13501:14;;;13494:42;13374:5;-1:-1:-1;13579:46:39;13621:2;13606:18;;13579:46;:::i;:::-;13569:56;;13671:2;13660:9;13656:18;13650:25;13634:41;;13700:2;13690:8;13687:16;13684:36;;;13716:1;13713;13706:12;13684:36;;13739:62;13793:7;13782:8;13771:9;13767:24;13739:62;:::i;:::-;13729:72;;;12022:1785;;;;;:::o;14036:128::-;14103:9;;;14124:11;;;14121:37;;;14138:18;;:::i;14518:168::-;14591:9;;;14622;;14639:15;;;14633:22;;14619:37;14609:71;;14660:18;;:::i;14691:217::-;14731:1;14757;14747:132;;14801:10;14796:3;14792:20;14789:1;14782:31;14836:4;14833:1;14826:15;14864:4;14861:1;14854:15;14747:132;-1:-1:-1;14893:9:39;;14691:217::o;16321:287::-;16450:3;16488:6;16482:13;16504:66;16563:6;16558:3;16551:4;16543:6;16539:17;16504:66;:::i;:::-;16586:16;;;;;16321:287;-1:-1:-1;;16321:287:39:o;16993:202::-;17060:6;17113:2;17101:9;17092:7;17088:23;17084:32;17081:52;;;17129:1;17126;17119:12;17081:52;17152:37;17179:9;17152:37;:::i",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "calculateRelayerFee(uint256)": "dc404a0e",
    "chainId()": "9a8a0592",
    "decodeMessage(bytes)": "634d45b2",
    "encodeMessage((uint8,bytes32,uint256))": "1e9b61af",
    "feePrecision()": "35ff1e28",
    "getReceivedMessage(bytes32)": "1b6e4ab6",
    "getRegisteredEmitter(uint16)": "24816abb",
    "isMessageConsumed(bytes32)": "470feb87",
    "isPaused()": "b187bd26",
    "isWhitelistEnabled()": "184d69ab",
    "isWhitelisted(address)": "3af32abf",
    "lockAndSend(bytes32,uint256)": "5df52e23",
    "owner()": "8da5cb5b",
    "redeemAndUnlock(bytes)": "8fe33b9f",
    "registerEmitter(uint16,bytes32)": "bca4b0fa",
    "relayerFeePercentage()": "85e66df4",
    "setWhatTokenAddress(address)": "bfb3c010",
    "whatToken()": "63c09358",
    "wormhole()": "84acd1bb",
    "wormholeFinality()": "0520557b"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"wormhole_\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"chainId_\",\"type\":\"uint16\"},{\"internalType\":\"uint8\",\"name\":\"wormholeFinality_\",\"type\":\"uint8\"},{\"internalType\":\"uint32\",\"name\":\"feePrecision_\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"relayerFeePercentage_\",\"type\":\"uint32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"FailedVaaParseAndVerification\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientContractBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidAmount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidEVMAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidMessageLength\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidWormholeFeeAmount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RecipientZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"VaaAlreadyClaimed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"WhatTokenZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"WormholeZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"WrongChainId\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"WrongEmitterAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"WrongEmitterChainId\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"WrongWormholeFinality\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"calculateRelayerFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"chainId\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"encodedMessage\",\"type\":\"bytes\"}],\"name\":\"decodeMessage\",\"outputs\":[{\"components\":[{\"internalType\":\"uint8\",\"name\":\"payloadID\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"recipient\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct WhatTokenBridgeStructs.TransferMessage\",\"name\":\"parsedMessage\",\"type\":\"tuple\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint8\",\"name\":\"payloadID\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"recipient\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct WhatTokenBridgeStructs.TransferMessage\",\"name\":\"parsedMessage\",\"type\":\"tuple\"}],\"name\":\"encodeMessage\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"encodedMessage\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feePrecision\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"}],\"name\":\"getReceivedMessage\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"emitterChainId\",\"type\":\"uint16\"}],\"name\":\"getRegisteredEmitter\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"}],\"name\":\"isMessageConsumed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isPaused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isWhitelistEnabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isWhitelisted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"recipient\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"lockAndSend\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"messageSequence\",\"type\":\"uint64\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"encodedMessage\",\"type\":\"bytes\"}],\"name\":\"redeemAndUnlock\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"emitterChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes32\",\"name\":\"emitterAddress\",\"type\":\"bytes32\"}],\"name\":\"registerEmitter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"relayerFeePercentage\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"whatToken\",\"type\":\"address\"}],\"name\":\"setWhatTokenAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"whatToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wormhole\",\"outputs\":[{\"internalType\":\"contract IWormhole\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wormholeFinality\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"calculateRelayerFee(uint256)\":{\"params\":{\"amount\":\"The amount of tokens being transferred.\"},\"returns\":{\"_0\":\"The calculated relayer fee.\"}},\"constructor\":{\"params\":{\"chainId_\":\"ID of the chain this contract is deployed on.\",\"feePrecision_\":\"Precision of the fee calculation.\",\"relayerFeePercentage_\":\"Percentage of the transferred tokens used as relayer fee.\",\"wormholeFinality_\":\"The number of block confirmations required for finality.\",\"wormhole_\":\"Address of the Wormhole contract.\"}},\"lockAndSend(bytes32,uint256)\":{\"params\":{\"amount\":\"The amount of tokens to be locked and sent.\",\"recipient\":\"Address on the destination chain that will receive the tokens.\"},\"returns\":{\"messageSequence\":\"The sequence number of the Wormhole message.\"}},\"redeemAndUnlock(bytes)\":{\"params\":{\"encodedMessage\":\"The Wormhole message containing token transfer details.\"}},\"registerEmitter(uint16,bytes32)\":{\"details\":\"Only the deployer (owner) can invoke this method\",\"params\":{\"emitterAddress\":\"32-byte address of the contract being registered. For EVM contracts the first 12 bytes should be zeros.\",\"emitterChainId\":\"Wormhole chainId of the contract being registered. See https://book.wormhole.com/reference/contracts.html for more information.\"}},\"setWhatTokenAddress(address)\":{\"params\":{\"whatToken\":\"Address of the token contract.\"}}},\"title\":\"WhatTokenBridge\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"calculateRelayerFee(uint256)\":{\"notice\":\"Calculates the relayer fee based on the transferred amount.\"},\"constructor\":{\"notice\":\"Initializes the WhatTokenBridge contract.\"},\"lockAndSend(bytes32,uint256)\":{\"notice\":\"Locks tokens in the contract and sends a message via Wormhole.\"},\"redeemAndUnlock(bytes)\":{\"notice\":\"Redeems the locked tokens and unlocks them on this chain.         The relayer is rewarded with a fee for redeeming the message.\"},\"registerEmitter(uint16,bytes32)\":{\"notice\":\"Registers foreign emitters (HelloToken contracts) with this contract\"},\"setWhatTokenAddress(address)\":{\"notice\":\"Sets the token contract address for the bridge.\"}},\"notice\":\"This contract handles locking tokens on the source chain and         sending a message via Wormhole to unlock tokens on the destination chain.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/what_token_bridge/WhatTokenBridge.sol\":\"WhatTokenBridge\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@solidity-parser/=node_modules/@solidity-parser/\",\":contracts/=src/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/\",\":modules/=src/modules/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x190dd6f8d592b7e4e930feb7f4313aeb8e1c4ad3154c27ce1cf6a512fc30d8cc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ce8dfb62d0c4fa260d6eec8f1cd47f5f2a044e11bde5b31d18072fa6e7d9010\",\"dweb:/ipfs/QmTyFztU3tLEcEDnqqiaW4UJetqsU77LXc6pjc9oTXCK5u\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x9b72f93be69ca894d8492c244259615c4a742afc8d63720dbc8bb81087d9b238\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5a7b96e511be78d5cdf635c784e6ab8cdd38625bb8cafb8a80914a1c89cf0f6\",\"dweb:/ipfs/QmVzTCwJxQAkjRQHboT5QrvsVJGWQHgfEjeTbvyxoKBrds\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]},\"src/modules/utils/BytesLib.sol\":{\"keccak256\":\"0xba0933bb8fda900b85ad79924aee89a2bd5478f22bd1e4a803b1490d621dd326\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://6ef7372762d0d34430f7a7d189c7e4c1acd9e76eb5d52ac6ad50472d47f82330\",\"dweb:/ipfs/QmSiHuDhZZ1qVzfuwejnJpJ6WkHucvhKJsHdr1X1iXDnPQ\"]},\"src/modules/wormhole/IWormhole.sol\":{\"keccak256\":\"0x50b01b142388fec9d96281638f172ff51bc7635c22ebcdcc51747ccb1f08ead2\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://8053287b25a972ad78c2521de57a0a74b9b43a385b2db576b5abc4968d7f4733\",\"dweb:/ipfs/QmahLC2GKrA1diL8W78XvrUQ1XNysr1GyR27yuDh85HS3Q\"]},\"src/what_token_bridge/WhatTokenBridge.sol\":{\"keccak256\":\"0xbdad9f5db401b450088803d8777852572532e282da438ecd663ba29d66a1a375\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://329a35b67c6f7b313aa6a73c63055c4ff2931c01856836b7c5a10ba996efe857\",\"dweb:/ipfs/QmVY7yzuvH3fXjJ4rBfkUdMURh9UxBWzLoPzXMSb3Vc2wR\"]},\"src/what_token_bridge/WhatTokenBridgeErrors.sol\":{\"keccak256\":\"0x8e893cce49bae7df24feffb4c867df33493060be57654f64875eec2adece5888\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://d75c26eb8f7fc71a8236d8cea844b400b2a14ca44eef3370cc06d5ce3cabf60b\",\"dweb:/ipfs/QmaHDTb2GMVXw8sUrpNnM4JFUm5gQGxHqmjbMxp11gayRc\"]},\"src/what_token_bridge/WhatTokenBridgeGetters.sol\":{\"keccak256\":\"0x7ec0351db1d754dd52a6ff0e57e8d07b82063074db9f5f15073836fbb257447b\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://3021f7ddfeff44340d386fac476695a69d79ca79ab3f92ec809953426793c091\",\"dweb:/ipfs/QmRGtnXjktTMUc5X2H45RZ7PSxi5bfarLJRDHvNbV3feDc\"]},\"src/what_token_bridge/WhatTokenBridgeMessages.sol\":{\"keccak256\":\"0x75f09334df673cc00ccdde77425881bb0ec047a2f3b3b8bec0acd0928bf9f904\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://9c5a1523b3d1e4230461393ff62266fa6b15309fc014492c796f7bfacc3d559e\",\"dweb:/ipfs/QmfCnMKHc3xeUn4hfrgZRn63XCPjAB9S2rNZ5eBKbnN44w\"]},\"src/what_token_bridge/WhatTokenBridgeSetters.sol\":{\"keccak256\":\"0xa2f686b57dfb7351b30177e3280117955152a47962de0e29abe735b224743181\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://407d15c349a01e650438a05c954c5f5c936a16fda3c4a8773492980cf532e9c6\",\"dweb:/ipfs/QmdBxmC6PDmEb8KN9FRpL6hUUKFtaeCy5TuYLjEQSPXGrT\"]},\"src/what_token_bridge/WhatTokenBridgeState.sol\":{\"keccak256\":\"0xbe8c5b244f926aa2de36e0e139a3f4b31cb29c5fa5185f937ee7c6923ce60ba9\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://6b0d5be4879a96f54adbe176ee24c571cc45515dee46473b649799b67854aa4f\",\"dweb:/ipfs/QmZeeZWcJM5Amircfs2Co5rReuKnz3CKArJSguvgLT9KUD\"]},\"src/what_token_bridge/WhatTokenBridgeStructs.sol\":{\"keccak256\":\"0xfc50bb0b0b229120db4f3dd14fb709af516768753fa5d1e716d210b98870ffcb\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://958d8ae81fd24b392ffc1a3d3ddedfdc0b39861d7f5796227e36aab51e721037\",\"dweb:/ipfs/QmYWvkNsuNJbDzTRj1bigw6r41bVp27und21WDeXKwPA6g\"]}},\"version\":1}",
  "metadata": {
    "compiler": { "version": "0.8.19+commit.7dd6d404" },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "wormhole_",
              "type": "address"
            },
            { "internalType": "uint16", "name": "chainId_", "type": "uint16" },
            {
              "internalType": "uint8",
              "name": "wormholeFinality_",
              "type": "uint8"
            },
            {
              "internalType": "uint32",
              "name": "feePrecision_",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "relayerFeePercentage_",
              "type": "uint32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            { "internalType": "string", "name": "reason", "type": "string" }
          ],
          "type": "error",
          "name": "FailedVaaParseAndVerification"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InsufficientContractBalance"
        },
        { "inputs": [], "type": "error", "name": "InvalidAmount" },
        { "inputs": [], "type": "error", "name": "InvalidEVMAddress" },
        { "inputs": [], "type": "error", "name": "InvalidMessageLength" },
        { "inputs": [], "type": "error", "name": "InvalidWormholeFeeAmount" },
        { "inputs": [], "type": "error", "name": "RecipientZeroAddress" },
        { "inputs": [], "type": "error", "name": "TransferFailed" },
        { "inputs": [], "type": "error", "name": "VaaAlreadyClaimed" },
        { "inputs": [], "type": "error", "name": "WhatTokenZeroAddress" },
        { "inputs": [], "type": "error", "name": "WormholeZeroAddress" },
        { "inputs": [], "type": "error", "name": "WrongChainId" },
        { "inputs": [], "type": "error", "name": "WrongEmitterAddress" },
        { "inputs": [], "type": "error", "name": "WrongEmitterChainId" },
        { "inputs": [], "type": "error", "name": "WrongWormholeFinality" },
        {
          "inputs": [
            { "internalType": "uint256", "name": "amount", "type": "uint256" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "calculateRelayerFee",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "chainId",
          "outputs": [
            { "internalType": "uint16", "name": "", "type": "uint16" }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "encodedMessage",
              "type": "bytes"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "decodeMessage",
          "outputs": [
            {
              "internalType": "struct WhatTokenBridgeStructs.TransferMessage",
              "name": "parsedMessage",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint8",
                  "name": "payloadID",
                  "type": "uint8"
                },
                {
                  "internalType": "bytes32",
                  "name": "recipient",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct WhatTokenBridgeStructs.TransferMessage",
              "name": "parsedMessage",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint8",
                  "name": "payloadID",
                  "type": "uint8"
                },
                {
                  "internalType": "bytes32",
                  "name": "recipient",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ]
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "encodeMessage",
          "outputs": [
            {
              "internalType": "bytes",
              "name": "encodedMessage",
              "type": "bytes"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "feePrecision",
          "outputs": [
            { "internalType": "uint32", "name": "", "type": "uint32" }
          ]
        },
        {
          "inputs": [
            { "internalType": "bytes32", "name": "hash", "type": "bytes32" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getReceivedMessage",
          "outputs": [
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            { "internalType": "uint256", "name": "amount", "type": "uint256" }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint16",
              "name": "emitterChainId",
              "type": "uint16"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRegisteredEmitter",
          "outputs": [
            { "internalType": "bytes32", "name": "", "type": "bytes32" }
          ]
        },
        {
          "inputs": [
            { "internalType": "bytes32", "name": "hash", "type": "bytes32" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isMessageConsumed",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "isPaused",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "isWhitelistEnabled",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "account", "type": "address" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isWhitelisted",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "recipient",
              "type": "bytes32"
            },
            { "internalType": "uint256", "name": "amount", "type": "uint256" }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "lockAndSend",
          "outputs": [
            {
              "internalType": "uint64",
              "name": "messageSequence",
              "type": "uint64"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            { "internalType": "address", "name": "", "type": "address" }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "encodedMessage",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "redeemAndUnlock"
        },
        {
          "inputs": [
            {
              "internalType": "uint16",
              "name": "emitterChainId",
              "type": "uint16"
            },
            {
              "internalType": "bytes32",
              "name": "emitterAddress",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "registerEmitter"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "relayerFeePercentage",
          "outputs": [
            { "internalType": "uint32", "name": "", "type": "uint32" }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "whatToken",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setWhatTokenAddress"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "whatToken",
          "outputs": [
            { "internalType": "address", "name": "", "type": "address" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "wormhole",
          "outputs": [
            {
              "internalType": "contract IWormhole",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "wormholeFinality",
          "outputs": [{ "internalType": "uint8", "name": "", "type": "uint8" }]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "calculateRelayerFee(uint256)": {
            "params": { "amount": "The amount of tokens being transferred." },
            "returns": { "_0": "The calculated relayer fee." }
          },
          "constructor": {
            "params": {
              "chainId_": "ID of the chain this contract is deployed on.",
              "feePrecision_": "Precision of the fee calculation.",
              "relayerFeePercentage_": "Percentage of the transferred tokens used as relayer fee.",
              "wormholeFinality_": "The number of block confirmations required for finality.",
              "wormhole_": "Address of the Wormhole contract."
            }
          },
          "lockAndSend(bytes32,uint256)": {
            "params": {
              "amount": "The amount of tokens to be locked and sent.",
              "recipient": "Address on the destination chain that will receive the tokens."
            },
            "returns": {
              "messageSequence": "The sequence number of the Wormhole message."
            }
          },
          "redeemAndUnlock(bytes)": {
            "params": {
              "encodedMessage": "The Wormhole message containing token transfer details."
            }
          },
          "registerEmitter(uint16,bytes32)": {
            "details": "Only the deployer (owner) can invoke this method",
            "params": {
              "emitterAddress": "32-byte address of the contract being registered. For EVM contracts the first 12 bytes should be zeros.",
              "emitterChainId": "Wormhole chainId of the contract being registered. See https://book.wormhole.com/reference/contracts.html for more information."
            }
          },
          "setWhatTokenAddress(address)": {
            "params": { "whatToken": "Address of the token contract." }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "calculateRelayerFee(uint256)": {
            "notice": "Calculates the relayer fee based on the transferred amount."
          },
          "constructor": {
            "notice": "Initializes the WhatTokenBridge contract."
          },
          "lockAndSend(bytes32,uint256)": {
            "notice": "Locks tokens in the contract and sends a message via Wormhole."
          },
          "redeemAndUnlock(bytes)": {
            "notice": "Redeems the locked tokens and unlocks them on this chain.         The relayer is rewarded with a fee for redeeming the message."
          },
          "registerEmitter(uint16,bytes32)": {
            "notice": "Registers foreign emitters (HelloToken contracts) with this contract"
          },
          "setWhatTokenAddress(address)": {
            "notice": "Sets the token contract address for the bridge."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@openzeppelin/=lib/openzeppelin-contracts/",
        "@solidity-parser/=node_modules/@solidity-parser/",
        "contracts/=src/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        "forge-std/=lib/forge-std/src/",
        "halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/",
        "modules/=src/modules/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/"
      ],
      "optimizer": { "enabled": true, "runs": 200 },
      "metadata": { "bytecodeHash": "ipfs" },
      "compilationTarget": {
        "src/what_token_bridge/WhatTokenBridge.sol": "WhatTokenBridge"
      },
      "evmVersion": "paris",
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol": {
        "keccak256": "0x190dd6f8d592b7e4e930feb7f4313aeb8e1c4ad3154c27ce1cf6a512fc30d8cc",
        "urls": [
          "bzz-raw://4ce8dfb62d0c4fa260d6eec8f1cd47f5f2a044e11bde5b31d18072fa6e7d9010",
          "dweb:/ipfs/QmTyFztU3tLEcEDnqqiaW4UJetqsU77LXc6pjc9oTXCK5u"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b",
        "urls": [
          "bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34",
          "dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/draft-IERC20Permit.sol": {
        "keccak256": "0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329",
        "urls": [
          "bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95",
          "dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0x9b72f93be69ca894d8492c244259615c4a742afc8d63720dbc8bb81087d9b238",
        "urls": [
          "bzz-raw://f5a7b96e511be78d5cdf635c784e6ab8cdd38625bb8cafb8a80914a1c89cf0f6",
          "dweb:/ipfs/QmVzTCwJxQAkjRQHboT5QrvsVJGWQHgfEjeTbvyxoKBrds"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1",
        "urls": [
          "bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269",
          "dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj"
        ],
        "license": "MIT"
      },
      "src/modules/utils/BytesLib.sol": {
        "keccak256": "0xba0933bb8fda900b85ad79924aee89a2bd5478f22bd1e4a803b1490d621dd326",
        "urls": [
          "bzz-raw://6ef7372762d0d34430f7a7d189c7e4c1acd9e76eb5d52ac6ad50472d47f82330",
          "dweb:/ipfs/QmSiHuDhZZ1qVzfuwejnJpJ6WkHucvhKJsHdr1X1iXDnPQ"
        ],
        "license": "Unlicense"
      },
      "src/modules/wormhole/IWormhole.sol": {
        "keccak256": "0x50b01b142388fec9d96281638f172ff51bc7635c22ebcdcc51747ccb1f08ead2",
        "urls": [
          "bzz-raw://8053287b25a972ad78c2521de57a0a74b9b43a385b2db576b5abc4968d7f4733",
          "dweb:/ipfs/QmahLC2GKrA1diL8W78XvrUQ1XNysr1GyR27yuDh85HS3Q"
        ],
        "license": "Apache 2"
      },
      "src/what_token_bridge/WhatTokenBridge.sol": {
        "keccak256": "0xbdad9f5db401b450088803d8777852572532e282da438ecd663ba29d66a1a375",
        "urls": [
          "bzz-raw://329a35b67c6f7b313aa6a73c63055c4ff2931c01856836b7c5a10ba996efe857",
          "dweb:/ipfs/QmVY7yzuvH3fXjJ4rBfkUdMURh9UxBWzLoPzXMSb3Vc2wR"
        ],
        "license": "Apache 2"
      },
      "src/what_token_bridge/WhatTokenBridgeErrors.sol": {
        "keccak256": "0x8e893cce49bae7df24feffb4c867df33493060be57654f64875eec2adece5888",
        "urls": [
          "bzz-raw://d75c26eb8f7fc71a8236d8cea844b400b2a14ca44eef3370cc06d5ce3cabf60b",
          "dweb:/ipfs/QmaHDTb2GMVXw8sUrpNnM4JFUm5gQGxHqmjbMxp11gayRc"
        ],
        "license": "Apache 2"
      },
      "src/what_token_bridge/WhatTokenBridgeGetters.sol": {
        "keccak256": "0x7ec0351db1d754dd52a6ff0e57e8d07b82063074db9f5f15073836fbb257447b",
        "urls": [
          "bzz-raw://3021f7ddfeff44340d386fac476695a69d79ca79ab3f92ec809953426793c091",
          "dweb:/ipfs/QmRGtnXjktTMUc5X2H45RZ7PSxi5bfarLJRDHvNbV3feDc"
        ],
        "license": "Apache 2"
      },
      "src/what_token_bridge/WhatTokenBridgeMessages.sol": {
        "keccak256": "0x75f09334df673cc00ccdde77425881bb0ec047a2f3b3b8bec0acd0928bf9f904",
        "urls": [
          "bzz-raw://9c5a1523b3d1e4230461393ff62266fa6b15309fc014492c796f7bfacc3d559e",
          "dweb:/ipfs/QmfCnMKHc3xeUn4hfrgZRn63XCPjAB9S2rNZ5eBKbnN44w"
        ],
        "license": "Apache 2"
      },
      "src/what_token_bridge/WhatTokenBridgeSetters.sol": {
        "keccak256": "0xa2f686b57dfb7351b30177e3280117955152a47962de0e29abe735b224743181",
        "urls": [
          "bzz-raw://407d15c349a01e650438a05c954c5f5c936a16fda3c4a8773492980cf532e9c6",
          "dweb:/ipfs/QmdBxmC6PDmEb8KN9FRpL6hUUKFtaeCy5TuYLjEQSPXGrT"
        ],
        "license": "Apache 2"
      },
      "src/what_token_bridge/WhatTokenBridgeState.sol": {
        "keccak256": "0xbe8c5b244f926aa2de36e0e139a3f4b31cb29c5fa5185f937ee7c6923ce60ba9",
        "urls": [
          "bzz-raw://6b0d5be4879a96f54adbe176ee24c571cc45515dee46473b649799b67854aa4f",
          "dweb:/ipfs/QmZeeZWcJM5Amircfs2Co5rReuKnz3CKArJSguvgLT9KUD"
        ],
        "license": "Apache 2"
      },
      "src/what_token_bridge/WhatTokenBridgeStructs.sol": {
        "keccak256": "0xfc50bb0b0b229120db4f3dd14fb709af516768753fa5d1e716d210b98870ffcb",
        "urls": [
          "bzz-raw://958d8ae81fd24b392ffc1a3d3ddedfdc0b39861d7f5796227e36aab51e721037",
          "dweb:/ipfs/QmYWvkNsuNJbDzTRj1bigw6r41bVp27und21WDeXKwPA6g"
        ],
        "license": "Apache 2"
      }
    },
    "version": 1
  },
  "id": 32
}
